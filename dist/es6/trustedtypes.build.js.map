{
"version":3,
"file":"trustedtypes.build.js",
"lineCount":36,
"mappings":"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",
"sources":["src/data/trustedtypeconfig.js","src/trustedtypes.js","src/utils/wrapper.js","src/utils/srcset.js","src/enforcer.js","src/polyfill/api_only.js","src/polyfill/full.js"],
"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * CSP Directive name controlling Trusted Types behavior.\n * @type {string}\n */\nexport const DIRECTIVE_NAME = 'trusted-types';\n\n/**\n * A configuration object for trusted type enforcement.\n */\nexport class TrustedTypeConfig {\n  /**\n   * @param {boolean} isLoggingEnabled If true enforcement wrappers will log\n   *   violations to the console.\n   * @param {boolean} isEnforcementEnabled If true enforcement is enabled at\n   *   runtime.\n   * @param {?string} fallbackPolicyName If present, direct DOM sink usage\n   *   will be passed through this policy (has to be exposed).\n   * @param {Array<string>} allowedPolicyNames Whitelisted policy names.\n   * @param {boolean=} allowHttpUrls if true, HTTP(s) urls will be transparently\n   *   treated like TrustedURLs. Applied only if enforcement or logging is\n   *   enabled.\n   * @param {?string} cspString String with the CSP policy.\n   */\n  constructor(isLoggingEnabled,\n      isEnforcementEnabled,\n      fallbackPolicyName,\n      allowedPolicyNames,\n      allowHttpUrls = false,\n      cspString = null) {\n    /**\n      * True if logging is enabled.\n      * @type {boolean}\n      */\n    this.isLoggingEnabled = isLoggingEnabled;\n\n    /**\n      * True if enforcement is enabled.\n      * @type {boolean}\n      */\n    this.isEnforcementEnabled = isEnforcementEnabled;\n\n    /**\n     * Fallback policy name\n     * @type {?string}\n     */\n    this.fallbackPolicyName = fallbackPolicyName;\n\n    /**\n     * Allowed policy names.\n     * @type {Array<string>}\n     */\n    this.allowedPolicyNames = allowedPolicyNames;\n\n    /**\n     * True if http(s) URLs should be implicitly treated as TrustedURLs.\n     * @type {boolean}\n     */\n    this.allowHttpUrls = allowHttpUrls;\n\n    /**\n     * CSP string that defined the policy.\n     * @type {?string}\n     */\n    this.cspString = cspString;\n  }\n\n  /**\n   * Parses a CSP policy.\n   * @link https://www.w3.org/TR/CSP3/#parse-serialized-policy\n   * @param  {string} cspString String with a CSP definition.\n   * @return {Object<string,Array<string>>} Parsed CSP, keyed by directive\n   *   names.\n   */\n  static parseCSP(cspString) {\n    const SEMICOLON = /\\s*;\\s*/;\n    const WHITESPACE = /\\s+/;\n    return cspString.trim().split(SEMICOLON)\n        .map((serializedDirective) => serializedDirective.split(WHITESPACE))\n        .reduce(function(parsed, directive) {\n          if (directive[0]) {\n            parsed[directive[0]] = directive.slice(1).map((s) => s).sort();\n          }\n          return parsed;\n        }, {});\n  }\n\n  /**\n   * Creates a TrustedTypeConfig object from a CSP string.\n   * @param  {string} cspString\n   * @return {!TrustedTypeConfig}\n   */\n  static fromCSP(cspString) {\n    const isLoggingEnabled = true;\n    const policy = TrustedTypeConfig.parseCSP(cspString);\n    const enforce = DIRECTIVE_NAME in policy;\n    let allowHttpUrls = false;\n    let policies = ['*'];\n    let fallbackPolicyName = 'default';\n    if (enforce) {\n      allowHttpUrls = policy[DIRECTIVE_NAME]\n          .indexOf('\\'url-allow-http\\'') !== -1;\n      policies = policy[DIRECTIVE_NAME].filter((p) => p.charAt(0) !== '\\'');\n    }\n\n    return new TrustedTypeConfig(\n      isLoggingEnabled,\n      enforce, /* isEnforcementEnabled */\n      fallbackPolicyName, /* fallbackPolicyName */\n      policies, /* allowedPolicyNames */\n      allowHttpUrls,\n      cspString\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nconst rejectInputFn = (s) => {\n  throw new TypeError('undefined conversion');\n};\n\n/**\n * @constructor\n * @property {!function(string):TrustedHTML} createHTML\n * @property {!function(string):TrustedURL} createURL\n * @property {!function(string):TrustedScriptURL} createScriptURL\n * @property {!function(string):TrustedScript} createScript\n * @property {!string} name\n */\nexport const TrustedTypePolicy = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/**\n * @constructor\n */\nexport const TrustedTypePolicyFactory = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {TrustedTypesInnerPolicy}\n * @property {function(string):string} createHTML\n * @property {function(string):string} createURL\n * @property {function(string):string} createScriptURL\n * @property {function(string):string} createScript\n */\nlet TrustedTypesInnerPolicy = {};\n/* eslint-enable no-unused-vars */\n\n\nexport const trustedTypesBuilderTestOnly = function() {\n  // Capture common names early.\n  const {\n    assign, create, defineProperty, freeze, getOwnPropertyNames,\n    getPrototypeOf, prototype: ObjectPrototype,\n  } = Object;\n\n  const {\n    forEach, push,\n  } = Array.prototype;\n\n  const creatorSymbol = Symbol();\n\n  /**\n   * Getter for the privateMap.\n   * @param  {Object} obj Key of the privateMap\n   * @return {Object<string, string>} Private storage.\n   */\n  const privates = function(obj) {\n    let v = privateMap.get(obj);\n    if (v === undefined) {\n      v = create(null); // initialize the private storage.\n      privateMap.set(obj, v);\n    }\n    return v;\n  };\n\n  /**\n   * Called before attacker-controlled code on an internal collections,\n   * copies prototype members onto the instance directly, so that later\n   * changes to prototypes cannot expose collection internals.\n   * @param {!T} collection\n   * @return {!T} collection\n   * @template T\n   */\n  function selfContained(collection) {\n    const proto = getPrototypeOf(collection);\n    if (proto == null || getPrototypeOf(proto) !== ObjectPrototype) {\n      throw new Error(); // Loop below is insufficient.\n    }\n    for (let key of getOwnPropertyNames(proto)) {\n      defineProperty(collection, key, {value: collection[key]});\n    }\n    return collection;\n  }\n\n  /**\n   * Map for private properties of Trusted Types object.\n   * This is so that the access to the type constructor does not give\n   * the ability to create typed values.\n   * @type {WeakMap}\n   */\n  const privateMap = selfContained(new WeakMap());\n\n  /**\n   * List of all configured policy names.\n   * @type {Array<string>}\n   */\n  const policyNames = selfContained([]);\n\n  /**\n   * Map of all exposed policies, keyed by policy name.\n   * @type {Map<string,!TrustedTypePolicy>}\n   */\n  const exposedPolicies = selfContained(new Map());\n\n  /**\n   * Allowed policy namess for policy names.\n   * @type {Array<string>}\n   */\n  const allowedNames = selfContained([]);\n\n  /**\n   * Whether to enforce allowedNames in createPolicy().\n   * @type {boolean}\n   */\n  let enforceNameWhitelist = false;\n\n\n  /**\n   * A value that is trusted to have certain security-relevant properties\n   * because the sources of such values are controlled.\n   */\n  class TrustedType {\n    /**\n     * Constructor for TrustedType. Only allowed to be called from within a\n     * policy.\n     * @param {symbol} s creatorSymbol\n     * @param {string} policyName The name of the policy this object was\n     *   created by.\n     */\n    constructor(s, policyName) {\n      // TODO: Figure out if symbol is needed, if the value is in privateMap.\n      if (s !== creatorSymbol) {\n        throw new Error('cannot call the constructor');\n      }\n      defineProperty(this, 'policyName',\n                     {value: '' + policyName, enumerable: true});\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    toString() {\n      return privates(this)['v'];\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    valueOf() {\n      return privates(this)['v'];\n    }\n  }\n\n  /**\n   * @param {function(new:TrustedType, symbol, string)} SubClass\n   * @param {string} canonName The class name which should be independent of\n   *     any renaming pass and which is relied upon by the enforcer and for\n   *     native type interop.\n   */\n  function lockdownTrustedType(SubClass, canonName) {\n    freeze(SubClass.prototype);\n    delete SubClass.name;\n    defineProperty(SubClass, 'name', {value: canonName});\n  }\n\n  /**\n   * Trusted URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedURL, 'TrustedURL');\n\n  /**\n   * Trusted Script URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScriptURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScriptURL, 'TrustedScriptURL');\n\n  /**\n   * Trusted HTML object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedHTML extends TrustedType {\n  }\n  lockdownTrustedType(TrustedHTML, 'TrustedHTML');\n\n  /**\n   * Trusted Script object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScript extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScript, 'TrustedScript');\n\n  lockdownTrustedType(TrustedType, 'TrustedType');\n\n  /**\n   * @type {!Object<string,!Function>}\n   */\n  const createTypeMapping = {\n    'createHTML': TrustedHTML,\n    'createScriptURL': TrustedScriptURL,\n    'createURL': TrustedURL,\n    'createScript': TrustedScript,\n  };\n\n  const createFunctionAllowed = createTypeMapping.hasOwnProperty;\n\n  /**\n   * Function generating a type checker.\n   * @template T\n   * @param  {T} type The type to check against.\n   * @return {function(*):boolean}\n   */\n  function isTrustedTypeChecker(type) {\n    return (obj) => (obj instanceof type) && privateMap.has(obj);\n  }\n\n  /**\n   * Wraps a user-defined policy rules with TT constructor\n   * @param  {string} policyName The policy name\n   * @param  {TrustedTypesInnerPolicy} innerPolicy InnerPolicy\n   * @return {!TrustedTypePolicy} Frozen policy object\n   */\n  function wrapPolicy(policyName, innerPolicy) {\n    /**\n     * @template T\n     * @param {function(new:T, symbol, string)} Ctor a trusted type constructor\n     * @param {string} methodName the policy factory method name\n     * @return {function(string):!T} a factory that produces instances of Ctor.\n     */\n    function creator(Ctor, methodName) {\n      // This causes thisValue to be null when called below.\n      const method = innerPolicy[methodName] || rejectInputFn;\n      const policySpecificType = freeze(new Ctor(creatorSymbol, policyName));\n      const factory = {\n        [methodName](s) { // Trick to get methodName to show in stacktrace.\n          let result = method('' + s);\n          if (result === undefined || result === null) {\n            result = '';\n          }\n          const allowedValue = '' + result;\n          const o = freeze(create(policySpecificType));\n          privates(o)['v'] = allowedValue;\n          return o;\n        },\n      }[methodName];\n      return freeze(factory);\n    }\n\n    let policy = create(TrustedTypePolicy.prototype);\n\n    for (const name of getOwnPropertyNames(createTypeMapping)) {\n      policy[name] = creator(createTypeMapping[name], name);\n    }\n    defineProperty(policy, 'name', {\n        value: policyName,\n        writable: false,\n        configurable: false,\n        enumerable: true,\n    });\n\n    return /** @type {!TrustedTypePolicy} */ (freeze(policy));\n  }\n\n  /**\n   * Returns a policy object, if given policy was exposed.\n   * @param  {string} name\n   * @return {?TrustedTypePolicy}\n   */\n  function getExposedPolicy(name) {\n    const pName = '' + name;\n    return exposedPolicies.get(pName) || null;\n  }\n\n  /**\n   * Returns all configured policy names (even for non-exposed policies).\n   * @return {!Array<string>}\n   */\n  function getPolicyNames() {\n    // TODO(msamuel): Should we sort policyNames to avoid leaking or\n    // encouraging dependency on the order in which policy names are\n    // registered?  I think JavaScript builtin sorts are efficient for\n    // almost-sorted lists so the amortized cost is close to O(n).\n    return policyNames.slice();\n  }\n\n  /**\n   * Creates a TT policy.\n   *\n   * Returns a frozen object representing a policy - a collection of functions\n   * that may create TT objects based on the user-provided rules specified\n   * in the policy object.\n   *\n   * @param  {string} name A unique name of the policy.\n   * @param  {TrustedTypesInnerPolicy} policy Policy rules object.\n   * @param  {boolean=} expose Iff true, the policy will be exposed (available\n   *   globally).\n   * @return {TrustedTypePolicy} The policy that may create TT objects\n   *   according to the policy rules.\n   */\n  function createPolicy(name, policy, expose = false) {\n    const pName = '' + name; // Assert it's a string\n\n    if (pName == 'default' && !expose) {\n      const message = 'The default policy must be exposed';\n       if (DOMException) {\n        // Workaround for missing externs in Closure compiler.\n        throw new window['DOMException'](message, 'InvalidStateError');\n      } else {\n        throw new TypeError(message);\n      }\n    }\n\n    if (enforceNameWhitelist && allowedNames.indexOf(pName) === -1) {\n      throw new TypeError('Policy ' + pName + ' disallowed.');\n    }\n\n    if (policyNames.indexOf(pName) !== -1) {\n      throw new TypeError('Policy ' + pName + ' exists.');\n    }\n    // Register the name early so that if policy getters unwisely calls\n    // across protection domains to code that reenters this function,\n    // policy author still has rights to the name.\n    policyNames.push(pName);\n\n    // Only copy own properties of names present in createTypeMapping.\n    const innerPolicy = create(null);\n    if (policy && typeof policy === 'object') {\n      // Treat non-objects as empty policies.\n      for (const key of getOwnPropertyNames(policy)) {\n        if (createFunctionAllowed.call(createTypeMapping, key)) {\n          innerPolicy[key] = policy[key];\n        }\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('TrustedTypes.createPolicy ' + pName +\n          ' was given an empty policy');\n    }\n    freeze(innerPolicy);\n\n    const wrappedPolicy = wrapPolicy(pName, innerPolicy);\n\n    if (expose) {\n      exposedPolicies.set(pName, wrappedPolicy);\n    }\n\n    return wrappedPolicy;\n  }\n\n  /**\n   * Applies the policy name whitelist.\n   * @param {!Array<string>} allowedPolicyNames\n   */\n  function setAllowedPolicyNames(allowedPolicyNames) {\n    if (allowedPolicyNames.indexOf('*') !== -1) { // Any policy name is allowed.\n      enforceNameWhitelist = false;\n    } else {\n      enforceNameWhitelist = true;\n      allowedNames.length = 0;\n      forEach.call(allowedPolicyNames, (el) => {\n        push.call(allowedNames, '' + el);\n      });\n    }\n  }\n\n\n  const api = create(TrustedTypePolicyFactory.prototype);\n  assign(api, {\n    // The main function to create policies.\n    createPolicy,\n\n    // Policy getter\n    getExposedPolicy,\n\n    getPolicyNames,\n\n    // Type checkers, also validating the object was initialized through a\n    // policy.\n    isHTML: isTrustedTypeChecker(TrustedHTML),\n    isURL: isTrustedTypeChecker(TrustedURL),\n    isScriptURL: isTrustedTypeChecker(TrustedScriptURL),\n    isScript: isTrustedTypeChecker(TrustedScript),\n\n    TrustedHTML: TrustedHTML,\n    TrustedURL: TrustedURL,\n    TrustedScriptURL: TrustedScriptURL,\n    TrustedScript: TrustedScript,\n  });\n\n  return {\n    TrustedTypes: freeze(api),\n    setAllowedPolicyNames,\n  };\n};\n\n\nexport const {\n  TrustedTypes,\n  setAllowedPolicyNames,\n} = trustedTypesBuilderTestOnly();\n\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nconst {\n  defineProperty,\n} = Object;\n\n/**\n * Installs the setter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} setter A setter function}\n */\nexport function installSetter(object, name, setter) {\n  const descriptor = {\n    set: setter,\n  };\n  defineProperty(object, name, descriptor);\n}\n\n/**\n * Installs a setter and getter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} setter A setter function}\n * @param {function(*): *|undefined} getter A getter function}\n */\nexport function installSetterAndGetter(object, name, setter, getter) {\n  const descriptor = {\n    set: setter,\n    get: getter,\n    configurable: true, // This can get uninstalled, we need configurable: true\n  };\n  defineProperty(object, name, descriptor);\n}\n\n/**\n * Installs the setter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} fn A function}\n */\nexport function installFunction(object, name, fn) {\n  defineProperty(object, name, {\n    value: fn,\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nconst {apply} = Reflect;\nconst {exec, test} = RegExp.prototype;\n\n/**\n * Given a valid srcset attribute value, returns an array where each element\n * corresponds to an image candidate strings and is an array with a URL in\n * element zero, and may contain image metadata in element one.\n *\n * For example, given \"/url0 128w, /url1 1.5x, /url2\" it returns\n * [\n *   { url: \"/url0\", metadata: \"128w\" },\n *   { url: \"/url1\", metadata: \"1.5x\" },\n *   { url: \"/url2\" }\n * ]\n *\n * @param {string} str\n * @return {!Array<!{ url: string, metadata: (string | undefined) }>}\n * @see https://html.spec.whatwg.org/multipage/images.html#srcset-attribute\n */\nexport function parseSrcset(str) {\n  if (typeof str !== 'string') {\n throw new TypeError(str);\n}\n\n  const imageCandidates = [];\n  // Unfortunately, we can't regex split on commas because\n  // http://example.com?a=b,c is valid as a URL part.\n  const tokens = str.split(ASCII_SPACES_RE);\n\n  let i = 0;\n  let n = tokens.length;\n\n  if (i < n && !tokens[i]) {\n    ++i;\n  }\n  if (i < n && !tokens[n - 1]) {\n    --n;\n  }\n  if (i >= n) {\n    throw new Error('empty srcset');\n  }\n\n  while (i < n) {\n    const url = tokens[i];\n    ++i; // Skip over url\n\n    let metadata = null;\n    if (i < n && tokens[i][0] !== ',') {\n      metadata = tokens[i];\n      const commaIndex = metadata.indexOf(',');\n      // Before:  tokens = [ 'url', '123,nexturl ]\n      //                            ^--------------- i\n      // After:   tokens = [ 'url', ',nexturl ]\n      //                            ^--------------- i\n      if (commaIndex >= 0) {\n        const rest = metadata.substring(commaIndex);\n        metadata = metadata.substring(0, commaIndex);\n        // Push back content after the comma.\n        tokens[i] = rest;\n      } else {\n        ++i; // Consume metadata token\n      }\n    }\n\n    if (metadata !== null) {\n      requireValidSrcMetadata(metadata);\n    }\n    // Content checks for URLs are delayed until after policy applicaiton.\n    let imageCandidate = {url};\n    if (metadata !== null) {\n      imageCandidate.metadata = metadata;\n    }\n    imageCandidates.push(imageCandidate);\n\n    if (i === n) {\n      // No comma or excess tokens.\n      break;\n    }\n\n    const nextToken = tokens[i];\n    if (nextToken[0] !== ',') {\n      break;\n    }\n    let strippedToken = nextToken.substring(1);\n    if (strippedToken) {\n      // Before:  tokens = [ 'url', ',nexturl ]\n      //                            ^--------------- i\n      // After:   tokens = [ 'url', 'nexturl ]\n      //                            ^--------------- i\n      tokens[i] = strippedToken;\n    } else {\n      ++i; // Skip over comma\n      if (i === n) {\n        throw new Error('expected URL');\n      }\n    }\n  }\n\n  if (i < n) {\n    throw new Error(\n      `srcset includes unconsumed content: ${ tokens.slice(i).join(' ') }`);\n  }\n\n  return imageCandidates;\n}\n\n/**\n * Unparses a structured srcset like that returned by parseSrcset.\n * This may throw on inputs that cannot be serialized, including some\n * inputs returned by parseSrcset.\n *\n * @param {!Array<!{ url: string, metadata: (string | undefined) }>}\n *        imageCandidates\n * @return {string}\n */\nexport function unparseSrcset(imageCandidates) {\n  let out = '';\n  for (let i = 0, n = imageCandidates.length; i < n; ++i) {\n    let {url, metadata} = imageCandidates[i];\n    if (i) {\n      out += ' , ';\n    }\n    url = `${ url }`;\n    requireEmbeddableUrl(url);\n    out += url;\n    if (metadata) {\n      metadata = `${ metadata }`;\n      requireValidSrcMetadata(metadata);\n      out += ' ' + metadata;\n    }\n  }\n  if (!out.length) {\n    throw new Error('empty srcset');\n  }\n  return out;\n}\n\n\n// https://infra.spec.whatwg.org/#ascii-whitespace\n// ASCII whitespace is U+0009 TAB, U+000A LF, U+000C FF, U+000D CR,\n// or U+0020 SPACE.\n// eslint-disable-next-line no-control-regex\nconst ASCII_SPACES_RE = /[\\u0009\\u000a\\u000c\\u000d\\u0020]+/;\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#floating-point-numbers\n// eslint-disable-next-line no-useless-escape\nconst FLOAT_RE = /^-?(?=[0-9.])[0-9]*(?:[.][0-9]+)?(?:[eE][+\\-]?[0-9]+)?$/;\n// ASCII_SPACES and commas are all relevant to the structure of a srcset\n// eslint-disable-next-line no-control-regex\nconst METACHARACTER_RE = /[\\u0009\\u000a\\u000c\\u000d\\u0020,]/;\n\n/**\n * Throws if str is not a valid floating point number string per whatwg/infra.\n * @param {string} str\n * @return {void}\n */\nfunction isValidFloatingPointNumber(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(str);\n  }\n  return apply(test, FLOAT_RE, [str]);\n}\n\n/**\n * Throws if str is not a valid image metadata string.\n * @param {string} metadata\n */\nfunction requireValidSrcMetadata(metadata) {\n  let numberPart = metadata;\n  // Metadata may have a letter after the (integer | float) part.\n  // Integers are lexically a subset of floats so just check that it floats.\n  const lastIndex = metadata.length - 1;\n  if (lastIndex >= 0) {\n    const lastCharCode = metadata.charCodeAt(lastIndex) | 32;\n    if (97 <= lastCharCode && lastCharCode <= 122) {\n      numberPart = numberPart.substring(0, lastIndex);\n    }\n  }\n  if (!isValidFloatingPointNumber(numberPart)) {\n    throw new Error(`Invalid srcset metadata ${ metadata }`);\n  }\n}\n\n/**\n * Throws on URLs that contain srcset meta-characters: ASCII spaces or commas.\n * Also rejects the empty string.\n *\n * @param {string} url\n */\nfunction requireEmbeddableUrl(url) {\n  if (!url || apply(exec, METACHARACTER_RE, [url])) {\n    throw new Error(`Cannot embed url ${ url } in srcset`);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/* eslint-disable no-unused-vars */\nimport {DIRECTIVE_NAME, TrustedTypeConfig} from './data/trustedtypeconfig.js';\nimport {TrustedTypes, setAllowedPolicyNames} from './trustedtypes.js';\n\n/* eslint-enable no-unused-vars */\nimport {installFunction, installSetter, installSetterAndGetter}\n  from './utils/wrapper.js';\n\nimport {parseSrcset, unparseSrcset} from './utils/srcset.js';\n\nconst {isArray} = Array;\nconst {apply} = Reflect;\nconst {\n  create,\n  getOwnPropertyNames,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  getPrototypeOf,\n  isPrototypeOf,\n} = Object;\n\nconst {indexOf, slice} = String.prototype;\n\nconst UrlConstructor = URL.prototype.constructor;\n\n// This is not available in release Firefox :(\n// https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1432523\nconst SecurityPolicyViolationEvent = window['SecurityPolicyViolationEvent'] ||\n  null;\n\n/**\n * Parses URL, catching all the errors.\n * @param  {string} url URL string to parse.\n * @return {URL|null}\n */\nfunction parseUrl_(url) {\n  try {\n    return new UrlConstructor(url, document.baseURI || undefined);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Checks if the URL is a HTTP(s) URL.\n * @param  {string}  url The URL to check.\n * @return {boolean} True iff the value is a http(s) URL.\n */\nfunction isHttpUrl_(url) {\n  const parsedUrl = parseUrl_(url);\n  if (!parsedUrl) {\n    return false;\n  }\n  return parsedUrl.protocol == 'http:' || parsedUrl.protocol == 'https:';\n}\n\n/**\n * A map of attribute names to allowed types.\n * @type {!Object<string, !Object<string, !Function>>}\n */\nlet SET_ATTRIBUTE_TYPE_MAP = {\n  // TODO(slekies): Add SVG Elements here\n  // TODO(koto): Figure out what to to with <link>\n  'HTMLAnchorElement': {\n    'href': TrustedTypes.TrustedURL,\n  },\n  'HTMLAreaElement': {\n    'href': TrustedTypes.TrustedURL,\n  },\n  'HTMLBaseElement': {\n    'href': TrustedTypes.TrustedURL,\n  },\n  'HTMLButtonElement': {\n    'formaction': TrustedTypes.TrustedURL,\n  },\n  'HTMLSourceElement': {\n    'src': TrustedTypes.TrustedURL,\n  },\n  'HTMLImageElement': {\n    'src': TrustedTypes.TrustedURL,\n    'srcset': TrustedTypes.TrustedURL, // Modulo special handling\n  },\n  'HTMLTrackElement': {\n    'src': TrustedTypes.TrustedURL,\n  },\n  'HTMLMediaElement': {\n    'src': TrustedTypes.TrustedURL,\n  },\n  'HTMLInputElement': {\n    'src': TrustedTypes.TrustedURL,\n    'formaction': TrustedTypes.TrustedURL,\n  },\n  'HTMLFormElement': {\n    'action': TrustedTypes.TrustedURL,\n  },\n  'HTMLFrameElement': {\n    'src': TrustedTypes.TrustedURL,\n  },\n  'HTMLIFrameElement': {\n    'src': TrustedTypes.TrustedURL,\n    'srcdoc': TrustedTypes.TrustedHTML,\n  },\n  'HTMLLinkElement': {\n    'href': TrustedTypes.TrustedURL,\n  },\n  'HTMLObjectElement': {\n    'data': TrustedTypes.TrustedScriptURL,\n    'codebase': TrustedTypes.TrustedScriptURL,\n  },\n  'HTMLEmbedElement': {\n    'src': TrustedTypes.TrustedScriptURL,\n  },\n  'HTMLScriptElement': {\n    'src': TrustedTypes.TrustedScriptURL,\n    // 'srcset': TrustedTypes.TrustedScriptURL, // Eventually\n    'text': TrustedTypes.TrustedScript,\n  },\n  'HTMLElement': {\n    // Event handlers handled specially\n  },\n};\n\n// Add inline event handlers property names.\nfor (let name of getOwnPropertyNames(HTMLElement.prototype)) {\n  if (name.slice(0, 2) === 'on') {\n    SET_ATTRIBUTE_TYPE_MAP['HTMLElement'][name] = TrustedTypes.TrustedScript;\n  }\n}\n\n/**\n * Map of type names to type checking function.\n * @type {!Object<string,!Function>}\n */\nconst TYPE_CHECKER_MAP = {\n  'TrustedHTML': TrustedTypes.isHTML,\n  'TrustedURL': TrustedTypes.isURL,\n  'TrustedScriptURL': TrustedTypes.isScriptURL,\n  'TrustedScript': TrustedTypes.isScript,\n};\n\n/**\n * Map of type names to type producing function.\n * @type {Object<string,string>}\n */\nconst TYPE_PRODUCER_MAP = {\n  'TrustedHTML': 'createHTML',\n  'TrustedURL': 'createURL',\n  'TrustedScriptURL': 'createScriptURL',\n  'TrustedScript': 'createScript',\n};\n\n/**\n * @type {function(string):?TrustedTypePolicy}\n */\nconst getExposedPolicy = TrustedTypes.getExposedPolicy;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {TrustedTypePolicy}\n * @property {function(string):TrustedHTML} createHTML\n * @property {function(string):TrustedURL} createURL\n * @property {function(string):TrustedScriptURL} createScriptURL\n * @property {function(string):TrustedScript} createScript\n */\nlet TrustedTypePolicy = {};\n/* eslint-enable no-unused-vars */\n\n/**\n * A map of HTML attribute to element property names.\n * @type {!Object<string, string>}\n */\nconst ATTR_PROPERTY_MAP = {\n  'codebase': 'codeBase',\n  'formaction': 'formAction',\n};\n\n/**\n * An object for enabling trusted type enforcement.\n */\nexport class TrustedTypesEnforcer {\n  /**\n   * @param {!TrustedTypeConfig} config The configuration for\n   * trusted type enforcement.\n   */\n  constructor(config) {\n    /**\n     * A configuration for the trusted type enforcement.\n     * @private {!TrustedTypeConfig}\n     */\n    this.config_ = config;\n    /**\n     * @private {Object<string, function(*): *|undefined>}\n     */\n    this.originalSetters_ = {};\n  }\n\n  /**\n   * Wraps HTML sinks with an enforcement setter, which will enforce\n   * trusted types and do logging, if enabled.\n   *\n   */\n  install() {\n    setAllowedPolicyNames(this.config_.allowedPolicyNames);\n\n    if (!this.config_.isEnforcementEnabled && !this.config_.isLoggingEnabled) {\n      return;\n    }\n\n    this.wrapSetter_(Element.prototype, 'innerHTML', TrustedTypes.TrustedHTML);\n    this.wrapSetter_(Element.prototype, 'outerHTML', TrustedTypes.TrustedHTML);\n    if ('ShadowRoot' in window) {\n      this.wrapSetter_(ShadowRoot.prototype, 'innerHTML',\n         TrustedTypes.TrustedHTML);\n    }\n    this.wrapWithEnforceFunction_(Range.prototype, 'createContextualFragment',\n        TrustedTypes.TrustedHTML, 0);\n    this.wrapWithEnforceFunction_(Element.prototype, 'insertAdjacentHTML',\n        TrustedTypes.TrustedHTML, 1);\n\n    if (getOwnPropertyDescriptor(Document.prototype, 'write')) {\n      // Chrome\n      this.wrapWithEnforceFunction_(Document.prototype, 'write',\n          TrustedTypes.TrustedHTML, 0);\n      this.wrapWithEnforceFunction_(Document.prototype, 'open',\n          TrustedTypes.TrustedURL, 0);\n    } else {\n      // Firefox\n      this.wrapWithEnforceFunction_(HTMLDocument.prototype, 'write',\n        TrustedTypes.TrustedHTML, 0);\n      this.wrapWithEnforceFunction_(HTMLDocument.prototype, 'open',\n          TrustedTypes.TrustedURL, 0);\n    }\n\n    this.wrapWithEnforceFunction_(window, 'open', TrustedTypes.TrustedURL, 0);\n    if ('DOMParser' in window) {\n      this.wrapWithEnforceFunction_(DOMParser.prototype, 'parseFromString',\n          TrustedTypes.TrustedHTML, 0);\n    }\n    this.wrapWithEnforceFunction_(window, 'setInterval',\n        TrustedTypes.TrustedScript, 0);\n    this.wrapWithEnforceFunction_(window, 'setTimeout',\n        TrustedTypes.TrustedScript, 0);\n    this.wrapSetAttribute_();\n    this.installScriptWrappers_();\n    this.installPropertySetWrappers_();\n  }\n\n  /**\n   * Removes the original setters.\n   */\n  uninstall() {\n    setAllowedPolicyNames(['*']);\n\n    if (!this.config_.isEnforcementEnabled && !this.config_.isLoggingEnabled) {\n      return;\n    }\n\n    this.restoreSetter_(Element.prototype, 'innerHTML');\n    this.restoreSetter_(Element.prototype, 'outerHTML');\n    if ('ShadowRoot' in window) {\n      this.restoreSetter_(ShadowRoot.prototype, 'innerHTML');\n    }\n    this.restoreFunction_(Range.prototype, 'createContextualFragment');\n    this.restoreFunction_(Element.prototype, 'insertAdjacentHTML');\n    this.restoreFunction_(Element.prototype, 'setAttribute');\n    this.restoreFunction_(Element.prototype, 'setAttributeNS');\n\n    if (getOwnPropertyDescriptor(Document.prototype, 'write')) {\n      this.restoreFunction_(Document.prototype, 'write');\n      this.restoreFunction_(Document.prototype, 'open');\n    } else {\n      this.restoreFunction_(HTMLDocument.prototype, 'write');\n      this.restoreFunction_(HTMLDocument.prototype, 'open');\n    }\n    this.restoreFunction_(window, 'open');\n    if ('DOMParser' in window) {\n      this.restoreFunction_(DOMParser.prototype, 'parseFromString');\n    }\n    this.restoreFunction_(window, 'setTimeout');\n    this.restoreFunction_(window, 'setInterval');\n    this.uninstallPropertySetWrappers_();\n    this.uninstallScriptWrappers_();\n  }\n\n  /**\n   * Installs wrappers for setting properties of script elements.\n   */\n  installScriptWrappers_() {\n    // HTMLScript element has no own setters for crucial properties, we have to\n    // reuse ones from HTMLElement.\n    this.wrapSetter_(HTMLScriptElement.prototype, 'innerText',\n        TrustedTypes.TrustedScript, HTMLElement.prototype);\n    this.wrapSetter_(HTMLScriptElement.prototype, 'textContent',\n        TrustedTypes.TrustedScript, Node.prototype);\n  }\n\n  /**\n   * Uninstalls wrappers for setting properties of script elements.\n   */\n  uninstallScriptWrappers_() {\n    this.restoreSetter_(HTMLScriptElement.prototype, 'innerText',\n        HTMLElement.prototype);\n    this.restoreSetter_(HTMLScriptElement.prototype, 'textContent',\n        Node.prototype);\n  }\n\n  /**\n   * Installs wrappers for directly setting properties\n   * based on SET_ATTRIBUTE_TYPE_MAP.\n   * @private\n   */\n  installPropertySetWrappers_() {\n    /* eslint-disable guard-for-in */\n    for (let type of getOwnPropertyNames(SET_ATTRIBUTE_TYPE_MAP)) {\n      for (let attribute of getOwnPropertyNames(SET_ATTRIBUTE_TYPE_MAP[type])) {\n        const property = apply(hasOwnProperty, ATTR_PROPERTY_MAP, [attribute]) ?\n              ATTR_PROPERTY_MAP[attribute] : attribute;\n        this.wrapSetter_(window[type].prototype, property,\n                         SET_ATTRIBUTE_TYPE_MAP[type][attribute]);\n      }\n    }\n  }\n\n  /**\n   * Uninstalls wrappers for directly setting properties\n   * based on SET_ATTRIBUTE_TYPE_MAP.\n   * @private\n   */\n  uninstallPropertySetWrappers_() {\n    /* eslint-disable guard-for-in */\n    for (let type of getOwnPropertyNames(SET_ATTRIBUTE_TYPE_MAP)) {\n      for (let attribute of getOwnPropertyNames(SET_ATTRIBUTE_TYPE_MAP[type])) {\n        const property = attribute in ATTR_PROPERTY_MAP ?\n              ATTR_PROPERTY_MAP[attribute] : attribute;\n        this.restoreSetter_(window[type].prototype, property);\n      }\n    }\n  }\n\n  /** Wraps set attribute with an enforcement function. */\n  wrapSetAttribute_() {\n    let that = this;\n    this.wrapFunction_(\n        Element.prototype,\n        'setAttribute',\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.setAttributeWrapper_\n              .bind(that, this, originalFn)\n              .apply(that, args);\n        });\n    this.wrapFunction_(\n      Element.prototype,\n      'setAttributeNS',\n      /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.setAttributeNSWrapper_\n              .bind(that, this, originalFn)\n              .apply(that, args);\n        });\n  }\n\n  /**\n   * Returns the required type for the setAtrtibute call.\n   * @param  {!Object} context The object to infer the type of attribute of.\n   * @param  {string} attrName The attribute name.\n   * @return {Function} The type to enforce, or null if no contract is found.\n   */\n  getRequiredTypeForAttribute_(context, attrName) {\n      let ctor = context.constructor;\n      do {\n        let type = ctor && ctor.name &&\n            SET_ATTRIBUTE_TYPE_MAP[ctor.name] &&\n            SET_ATTRIBUTE_TYPE_MAP[ctor.name][attrName];\n\n        if (type || ctor == HTMLElement) {\n          // Stop at HTMLElement.\n          return type;\n        }\n        // Explore the prototype chain.\n      } while (ctor = getPrototypeOf(ctor));\n\n      return null;\n  }\n\n  /**\n   * Enforces type checking for Element.prototype.setAttribute.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original setAttribute function.\n   * @return {*}\n   */\n  setAttributeWrapper_(context, originalFn, ...args) {\n    // Note(slekies): In a normal application constructor should never be null.\n    // However, there are no guarantees. If the constructor is null, we cannot\n    // determine whether a special type is required. In order to not break the\n    // application, we will not do any further type checks and pass the call\n    // to setAttribute.\n    if (context.constructor !== null) {\n      let attrName = (args[0] = String(args[0])).toLowerCase();\n      let type = this.getRequiredTypeForAttribute_(context, attrName);\n\n      if (type instanceof Function) {\n        return this.enforce_(\n          context, 'setAttribute', type, originalFn, 1, args);\n      }\n    }\n\n    return originalFn.apply(context, args);\n  }\n\n  /**\n   * Enforces type checking for Element.prototype.setAttributeNS.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original setAttributeNS function.\n   * @return {*}\n   */\n  setAttributeNSWrapper_(context, originalFn, ...args) {\n    /**\n     * @param {string} ns the namespace URL.\n     * @return {boolean} true iff the given argument is an HTML namespace.\n     */\n    function isHtmlNamespace(ns) {\n      return true; // TODO(msamuel): implement me\n    }\n    // See the note from setAttributeWrapper_ above.\n    if (context.constructor !== null) {\n      let ns = (args[0] = String(args[0])).toLowerCase();\n      let attrName = (args[1] = String(args[1])).toLowerCase();\n      if (isHtmlNamespace(ns)) {\n        let type = context.constructor && context.constructor.name &&\n            SET_ATTRIBUTE_TYPE_MAP[context.constructor.name] &&\n            SET_ATTRIBUTE_TYPE_MAP[context.constructor.name][attrName];\n\n        if (type instanceof Function) {\n          return this.enforce_(\n            context, 'setAttributeNS', type, originalFn, 2, args);\n        }\n      }\n      // TODO(msamuel): handle SVG namespace.  See TODO(slekies) above.\n    }\n\n    return originalFn.apply(context, args);\n  }\n\n\n  /**\n   * Wraps a setter with the enforcement wrapper.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Function} type The type to enforce.\n   * @param {number} argNumber Number of the argument to enforce the type of.\n   * @private\n   */\n  wrapWithEnforceFunction_(object, name, type, argNumber) {\n    let that = this;\n    this.wrapFunction_(\n        object,\n        name,\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.enforce_.call(that, this, name, type, originalFn,\n                                    argNumber, args);\n        });\n  }\n\n\n  /**\n   * Wraps an existing function with a given function body and stores the\n   * original function.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {function(!Function, ...*)} functionBody The wrapper function.\n   */\n  wrapFunction_(object, name, functionBody) {\n    let descriptor = getOwnPropertyDescriptor(object, name);\n    let originalFn = /** @type function(*):* */ (\n        descriptor ? descriptor.value : null);\n\n    if (!(originalFn instanceof Function)) {\n      throw new TypeError(\n          'Property ' + name + ' on object' + object + ' is not a function');\n    }\n\n    let key = this.getKey_(object, name);\n    if (this.originalSetters_[key]) {\n      throw new Error('TrustedTypesEnforcer: Double installation detected');\n    }\n    installFunction(\n        object,\n        name,\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @return {*}\n         */\n        function(...args) {\n          return functionBody.bind(this, originalFn).apply(this, args);\n        });\n    this.originalSetters_[key] = originalFn;\n  }\n\n  /**\n   * Wraps a setter with the enforcement wrapper.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Function} type The type to enforce.\n   * @param {!Object=} descriptorObject If present, will reuse the\n   *   setter/getter from this one, instead of object. Used for redefining\n   *   setters in subclasses.\n   * @private\n   */\n  wrapSetter_(object, name, type, descriptorObject = undefined) {\n    if (descriptorObject && !isPrototypeOf.call(descriptorObject, object)) {\n      throw new Error('Invalid prototype chain');\n    }\n\n    let useObject = descriptorObject || object;\n\n    let descriptor = getOwnPropertyDescriptor(useObject, name);\n\n    let originalSetter = /** @type {function(*):*} */ (descriptor ?\n        descriptor.set : null);\n\n    if (!(originalSetter instanceof Function)) {\n      throw new TypeError(\n          'No setter for property ' + name + ' on object' + object);\n    }\n\n    let key = this.getKey_(object, name);\n    if (this.originalSetters_[key]) {\n      throw new Error('TrustedTypesEnforcer: Double installation detected');\n    }\n    let that = this;\n    /**\n     * @this {TrustedTypesEnforcer}\n     * @param {*} value\n     */\n    let enforcingSetter = function(value) {\n          that.enforce_.call(that, this, name, type, originalSetter, 0,\n                             [value]);\n        };\n\n    if (useObject === object) {\n      installSetter(\n          object,\n          name,\n          enforcingSetter);\n    } else {\n      // Since we're creating a new setter in subclass, we also need to\n      // overwrite the getter.\n      installSetterAndGetter(\n          object,\n          name,\n          enforcingSetter,\n          descriptor.get\n      );\n    }\n    this.originalSetters_[key] = originalSetter;\n  }\n\n  /**\n   * Restores the original setter for the property, as encountered during\n   * install().\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Object=} descriptorObject If present, will restore the original\n   *   setter/getter from this one, instead of object.\n   * @private\n   */\n  restoreSetter_(object, name, descriptorObject = undefined) {\n    let key = this.getKey_(object, name);\n    if (descriptorObject && !isPrototypeOf.call(descriptorObject, object)) {\n      throw new Error('Invalid prototype chain');\n    }\n    if (!this.originalSetters_[key]) {\n      throw new Error(\n          'TrustedTypesEnforcer: Cannot restore (double uninstallation?)');\n    }\n    if (descriptorObject) {\n      // We have to also overwrite a getter.\n      installSetterAndGetter(object, name, this.originalSetters_[key],\n          getOwnPropertyDescriptor(descriptorObject, name).get);\n    } else {\n      installSetter(object, name, this.originalSetters_[key]);\n    }\n    delete this.originalSetters_[key];\n  }\n\n  /**\n   * Restores the original method of an object, as encountered during install().\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @private\n   */\n  restoreFunction_(object, name) {\n    let key = this.getKey_(object, name);\n    if (!this.originalSetters_[key]) {\n      throw new Error(\n          'TrustedTypesEnforcer: Cannot restore (double uninstallation?)');\n    }\n    installFunction(object, name, this.originalSetters_[key]);\n    delete this.originalSetters_[key];\n  }\n\n  /**\n   * Returns the key name for caching original setters.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @return {string} Key name.\n   * @private\n   */\n  getKey_(object, name) {\n    // TODO(msamuel): Can we use Object.prototype.toString.call(object)\n    // to get an unspoofable string here?\n    // TODO(msamuel): fail on '-' in object.constructor.name?\n    return '' + object.constructor.name + '-' + name;\n  }\n\n  /**\n   * The name of the attribute being enforced.\n   * @param {string} propertyName\n   * @param {Array} args\n   * @return {string}\n   * @private\n   */\n  getAttributeName_(propertyName, args) {\n    if (propertyName === 'setAttribute') {\n      return (args[0] = String(args[0])).toLowerCase();\n    }\n    if (propertyName === 'setAttributeNS') {\n      const qname = (args[1] = String(args[1]));\n      const colon = apply(indexOf, qname, [':']);\n      return qname.substring(colon + 1).toLowerCase();\n    }\n    return propertyName;\n  }\n\n  /**\n   * Logs and enforces TrustedTypes depending on the given configuration.\n   * @template T\n   * @param {!Object} context The object that the setter is called for.\n   * @param {string} propertyName The name of the property.\n   * @param {!Function} typeToEnforce The type to enforce.\n   * @param {function(?):T} originalSetter Original setter.\n   * @param {number} argNumber Number of argument to enforce the type of.\n   * @param {Array} args Arguments.\n   * @return {T}\n   * @private\n   */\n  enforce_(context, propertyName, typeToEnforce, originalSetter, argNumber,\n           args) {\n    let value = args[argNumber];\n    const typeName = '' + typeToEnforce.name;\n    // If typed value is given, pass through.\n    if (TYPE_CHECKER_MAP.hasOwnProperty(typeName) &&\n        TYPE_CHECKER_MAP[typeName](value)) {\n      return apply(originalSetter, context, args);\n    }\n\n    if (typeToEnforce === TrustedTypes.TrustedScript) {\n      const isInlineEventHandler =\n          propertyName === 'setAttribute' ||\n          propertyName === 'setAttributeNS' ||\n          'on' === apply(\n            slice, this.getAttributeName_(propertyName, args), [0, 2]);\n      // If a function (instead of string) is passed to inline event attribute,\n      // or set(Timeout|Interval), pass through.\n      const propertyAcceptsFunctions =\n          propertyName === 'setInterval' ||\n          propertyName === 'setTimeout' ||\n          isInlineEventHandler;\n      if ((propertyAcceptsFunctions && typeof value === 'function') ||\n          (isInlineEventHandler && value === null)) {\n        return apply(originalSetter, context, args);\n      }\n    }\n\n    if (isArray(value) &&\n        this.getAttributeName_(propertyName, args) === 'srcset') {\n      args[argNumber] = this.filterSrcset_(context, typeToEnforce, value);\n      return apply(originalSetter, context, args);\n    }\n\n    // Apply url-allow-http\n    if (typeToEnforce === TrustedTypes.TrustedURL &&\n        this.config_.allowHttpUrls) {\n      const url = '' + value;\n      if (isHttpUrl_(url)) {\n        args[argNumber] = url;\n        return apply(originalSetter, context, args);\n      }\n    }\n\n    // Apply a fallback policy, if it exists.\n    const fallback = this.config_.fallbackPolicyName;\n    if (fallback) {\n      const fallbackPolicy = getExposedPolicy.call(TrustedTypes, fallback);\n      if (fallbackPolicy && TYPE_CHECKER_MAP.hasOwnProperty(typeName)) {\n        if (this.getAttributeName_(propertyName, args) === 'srcset') {\n          const srcset = parseSrcset(String(value));\n          return apply(\n            originalSetter, context,\n            [this.filterSrcset_(context, typeToEnforce, srcset)]);\n        }\n\n        let fallbackValue;\n        let exceptionThrown;\n        try {\n          fallbackValue = fallbackPolicy[TYPE_PRODUCER_MAP[typeName]](value);\n        } catch (e) {\n          exceptionThrown = true;\n        }\n        if (!exceptionThrown) {\n          args[argNumber] = fallbackValue;\n          return apply(originalSetter, context, args);\n        }\n      }\n    }\n\n    let contextName = context.constructor.name || '' + context;\n    let message = `Failed to set ${propertyName} on ${contextName}: `\n        + `This property requires ${typeName}.`;\n\n    if (this.config_.isLoggingEnabled) {\n      // eslint-disable-next-line no-console\n      console.warn(message, propertyName, context, typeToEnforce, value);\n    }\n\n    // Unconditionally dispatch an event.\n    if (typeof SecurityPolicyViolationEvent == 'function') {\n      let blockedURI = '';\n      if (typeToEnforce === TrustedTypes.TrustedURL ||\n          typeToEnforce === TrustedTypes.TrustedScriptURL) {\n        blockedURI = parseUrl_(value) || '';\n        if (blockedURI) {\n          blockedURI = blockedURI.href;\n        }\n      }\n      const valueSlice = apply(slice, '' + value, [0, 40]);\n      const event = new SecurityPolicyViolationEvent(\n        'securitypolicyviolation',\n        {\n          'bubbles': true,\n          'blockedURI': blockedURI,\n          'disposition': this.config_.isEnforcementEnabled ?\n              'enforce' : 'report',\n          'documentURI': document.location.href,\n          'effectiveDirective': DIRECTIVE_NAME,\n          'originalPolicy': this.config_.cspString,\n          'statusCode': 0,\n          'violatedDirective': DIRECTIVE_NAME,\n          'sample': `${contextName}.${propertyName} ${valueSlice}`,\n        });\n      if (context.isConnected) {\n        context.dispatchEvent(event);\n      } else { // Fallback - dispatch an event on base document.\n        document.dispatchEvent(event);\n      }\n    }\n\n    if (this.config_.isEnforcementEnabled) {\n      throw new TypeError(message);\n    } else { // pass-through\n      return apply(originalSetter, context, args);\n    }\n  }\n\n  /**\n   * Given a structured srcset value, apply the policy to\n   * @param {!Object} context The object that the setter is called for.\n   * @param {!Function} typeToEnforce The type to enforce.\n   * @param {!Array} imageCandidates A list of image candidates similar\n   *     in structure to the output of parseSrcset but url property values\n   *     may be trusted values.\n   * @return {string} a valid srcset value string that only includes URLs\n   *     allowed by the policy.\n   */\n  filterSrcset_(context, typeToEnforce, imageCandidates) {\n    const filteredImageCandidates = [];\n    const identity = (x) => x;\n    for (let i = 0, n = imageCandidates.length; i < n; ++i) {\n      const imageCandidate = imageCandidates[i];\n      if (!apply(hasOwnProperty, imageCandidate, ['url'])) {\n        continue;\n      }\n      let url = imageCandidate.url;\n      try {\n        url = this.enforce_(context, 'src', typeToEnforce, identity, 0, [url]);\n      } catch (e) {\n        continue;\n      }\n      const filteredImageCandidate = create(null);\n      filteredImageCandidate.url = url;\n      if (apply(hasOwnProperty, imageCandidate, ['metadata'])) {\n        filteredImageCandidate.metadata = imageCandidate.metadata;\n      }\n      filteredImageCandidates[filteredImageCandidates.length] =\n        filteredImageCandidate;\n    }\n    return unparseSrcset(filteredImageCandidates);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * @fileoverview Entry point for a polyfill that only defines the types\n * (i.e. no enforcement logic).\n */\nimport {TrustedTypes, TrustedTypePolicy, TrustedTypePolicyFactory} from\n    '../trustedtypes.js';\n\nconst tt = TrustedTypes;\n\n/**\n * Sets up the public Trusted Types API in the global object.\n */\nfunction setupPolyfill() {\n  // Make sure Closure compiler exposes the names.\n  if (typeof window === 'undefined' ||\n      typeof window['TrustedTypes'] !== 'undefined') {\n    return;\n  }\n\n  const publicApi = Object.create(TrustedTypePolicyFactory.prototype);\n  Object.assign(publicApi, {\n    'isHTML': tt.isHTML,\n    'isURL': tt.isURL,\n    'isScriptURL': tt.isScriptURL,\n    'isScript': tt.isScript,\n    'createPolicy': tt.createPolicy,\n    'getExposedPolicy': tt.getExposedPolicy,\n    'getPolicyNames': tt.getPolicyNames,\n    '_isPolyfill_': true,\n  });\n  window['TrustedTypes'] = Object.freeze(publicApi);\n\n  window['TrustedHTML'] = tt.TrustedHTML;\n  window['TrustedURL'] = tt.TrustedURL;\n  window['TrustedScriptURL'] = tt.TrustedScriptURL;\n  window['TrustedScript'] = tt.TrustedScript;\n  window['TrustedTypePolicy'] = TrustedTypePolicy;\n  window['TrustedTypePolicyFactory'] = TrustedTypePolicyFactory;\n}\n\nsetupPolyfill();\n\nexport default tt;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * @fileoverview Entry point for a polyfill that enforces the types.\n */\nimport {TrustedTypesEnforcer} from '../enforcer.js';\nimport {TrustedTypeConfig} from '../data/trustedtypeconfig.js';\n/* eslint-disable no-unused-vars */\nimport TrustedTypes from './api_only.js';\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Tries to guess a CSP policy from:\n *  - the current polyfill script element text content (if prefixed with\n *    \"Content-Security-Policy:\")\n *  - the data-csp attribute value of the current script element.\n *  - meta header\n * @return {?string} Guessed CSP value, or null.\n */\nfunction detectPolicy() {\n    try {\n        const currentScript = document.currentScript || (function() {\n          let scripts = document.getElementsByTagName('script');\n          return scripts[scripts.length - 1];\n        })();\n\n        const bodyPrefix = 'Content-Security-Policy:';\n        if (currentScript &&\n            currentScript.textContent.trim().substr(0, bodyPrefix.length) ==\n                bodyPrefix) {\n            return currentScript.textContent.trim().slice(bodyPrefix.length);\n        }\n        if (currentScript.dataset['csp']) {\n            return currentScript.dataset['csp'];\n        }\n        const cspInMeta = document.head.querySelector(\n            'meta[http-equiv^=\"Content-Security-Policy\"]');\n        if (cspInMeta) {\n            return cspInMeta['content'].trim();\n        }\n    } catch (e) {\n        return null;\n    }\n    return null;\n}\n\n/**\n * Bootstraps all trusted types polyfill and their enforcement.\n */\nexport function bootstrap() {\n  const csp = detectPolicy();\n  const config = csp ? TrustedTypeConfig.fromCSP(csp) : new TrustedTypeConfig(\n    /* isLoggingEnabled */ false,\n    /* isEnforcementEnabled */ false,\n    /* fallbackPolicyName */ 'default',\n    /* allowedPolicyNames */ ['*']);\n\n  const trustedTypesEnforcer = new TrustedTypesEnforcer(config);\n\n  trustedTypesEnforcer.install();\n}\n\n/**\n * Determines if the enforcement should be enabled.\n * @return {boolean}\n */\nfunction shouldBootstrap() {\n  const rootProperty = 'TrustedTypes';\n  if (window[rootProperty] && !window[rootProperty]['_isPolyfill_']) {\n    // Native implementation exists\n    return false;\n  }\n  return true;\n}\n\n// Bootstrap only if native implementation is missing.\nif (shouldBootstrap()) {\n    bootstrap();\n}\n"],
"names":["TrustedTypeConfig","isLoggingEnabled","isEnforcementEnabled","fallbackPolicyName","allowedPolicyNames","allowHttpUrls","cspString","WHITESPACE","trim","split","SEMICOLON","map","serializedDirective","reduce","parsed","directive","slice","s","sort","policy","parseCSP","enforce","DIRECTIVE_NAME","policies","indexOf","filter","p","charAt","rejectInputFn","TypeError","TrustedTypePolicy","TrustedTypePolicyFactory","TrustedTypes","setAllowedPolicyNames","trustedTypesBuilderTestOnly","privates","obj","v","privateMap","get","undefined","create","set","selfContained","collection","proto","getPrototypeOf","ObjectPrototype","Error","key","getOwnPropertyNames","defineProperty","value","lockdownTrustedType","SubClass","canonName","freeze","prototype","name","isTrustedTypeChecker","type","has","wrapPolicy","policyName","innerPolicy","creator","Ctor","methodName","method","policySpecificType","creatorSymbol","result","allowedValue","o","factory","createTypeMapping","writable","configurable","enumerable","assign","Object","forEach","push","Array","Symbol","WeakMap","policyNames","exposedPolicies","Map","allowedNames","enforceNameWhitelist","TrustedType","TrustedURL","TrustedScriptURL","TrustedHTML","TrustedScript","createFunctionAllowed","hasOwnProperty","api","createPolicy","expose","pName","DOMException","window","message","call","console","warn","wrappedPolicy","getExposedPolicy","getPolicyNames","isHTML","isURL","isScriptURL","isScript","length","el","installFunction","object","fn","apply","Reflect","exec","test","RegExp","unparseSrcset","imageCandidates","out","i","n","url","metadata","METACHARACTER_RE","requireValidSrcMetadata","ASCII_SPACES_RE","FLOAT_RE","numberPart","lastIndex","lastCharCode","charCodeAt","substring","isArray","getOwnPropertyDescriptor","isPrototypeOf","String","UrlConstructor","URL","constructor","SecurityPolicyViolationEvent","parseUrl_","document","baseURI","e","SET_ATTRIBUTE_TYPE_MAP","HTMLElement","TYPE_CHECKER_MAP","TYPE_PRODUCER_MAP","ATTR_PROPERTY_MAP","TrustedTypesEnforcer","config","config_","originalSetters_","wrapSetter_","Element","ShadowRoot","wrapWithEnforceFunction_","Range","Document","HTMLDocument","DOMParser","wrapSetAttribute_","installScriptWrappers_","installPropertySetWrappers_","HTMLScriptElement","Node","attribute","property","that","wrapFunction_","originalFn","args","setAttributeWrapper_","bind","setAttributeNSWrapper_","context","attrName","ctor","toLowerCase","getRequiredTypeForAttribute_","Function","enforce_","argNumber","functionBody","descriptor","getKey_","descriptorObject","enforcingSetter","originalSetter","useObject","propertyName","qname","colon","typeToEnforce","typeName","isInlineEventHandler","getAttributeName_","filterSrcset_","parsedUrl","protocol","fallback","fallbackPolicy","str","tokens","commaIndex","rest","imageCandidate","nextToken","strippedToken","join","srcset","fallbackValue","exceptionThrown","contextName","blockedURI","href","valueSlice","event","location","isConnected","dispatchEvent","filteredImageCandidates","identity","x","filteredImageCandidate","publicApi","detectPolicy","currentScript","scripts","getElementsByTagName","bodyPrefix","textContent","substr","dataset","cspInMeta","head","querySelector","csp","fromCSP","install","trustedTypesEnforcer"]
}
