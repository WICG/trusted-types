{"version":3,"sources":["src/data/trustedtypeconfig.js","src/trustedtypes.js","src/utils/eventHandlers.js","src/utils/wrapper.js","src/enforcer.js","src/polyfill/api_only.js","src/polyfill/full.js"],"names":["parseCSP","cspString","WHITESPACE","trim","split","SEMICOLON","map","serializedDirective","reduce","parsed","directive","slice","s","sort","fromCSP","policy","TrustedTypeConfig$$module$src$data$trustedtypeconfig.parseCSP","enforce","DIRECTIVE_NAME","policies","filter","p","charAt","TrustedTypeConfig","isLoggingEnabled","isEnforcementEnabled","allowedPolicyNames","isBrowser","window","rejectInputFn","TypeError","toLowerCase","toUpperCase","String","prototype","TrustedTypePolicy","TrustedTypePolicyFactory","trustedTypes","setAllowedPolicyNames","trustedTypesBuilderTestOnly","privates","obj","v","privateMap","get","undefined","create","set","selfContained","collection","proto","getPrototypeOf","ObjectPrototype","Error","key","getOwnPropertyNames","defineProperty","value","lockdownTrustedType","SubClass","canonName","freeze","name","isTrustedTypeChecker","type","has","wrapPolicy","policyName","innerPolicy","creator","Ctor","methodName","method","policySpecificType","creatorSymbol","args","result","allowedValue","o","factory","createTypeMapping","writable","configurable","enumerable","getTypeInternal_","tag","container","elNs","attrNs","canonicalTag","apply","ns","HTML_NS","hasOwnProperty","TYPE_MAP","getDefaultPolicy","defaultPolicy","assign","Object","forEach","push","Array","Symbol","WeakMap","policyNames","allowedNames","enforceNameWhitelist","TrustedType","TrustedURL","TrustedScriptURL","TrustedHTML","TrustedScript","emptyHTML","XLINK_NS","SVG_NS","ATTR_PROPERTY_MAP","HTMLIFrameElement","keys","attr","createFunctionAllowed","api","createPolicy","indexOf","call","console","warn","wrappedPolicy","DEFAULT_POLICY_NAME","getPolicyNames","isHTML","isURL","isScriptURL","isScript","getAttributeType","tagName","attribute","elementNs","attributeNs","canonicalAttr","getPropertyType","property","getTypeMapping","namespaceUri","document","documentElement","namespaceURI","e","JSON","parse","stringify","length","el","resetDefaultPolicy","splice","installFunction","object","fn","Reflect","getOwnPropertyDescriptor","UrlConstructor","URL","constructor","stringifyForRangeHack","getConstructorName_","createElement","match","windowOpenObject","insertAdjacentObject","Element","HTMLElement","SecurityPolicyViolationEvent","typeMap","TrustedTypes","STRING_TO_TYPE","attrs","k","entries","TYPE_CHECKER_MAP","TYPE_PRODUCER_MAP","wrapSetter_","enforcingSetter","that","enforce_","originalSetter","useObject","descriptor","stopAt","Node","Function","getKey_","originalSetters_","wrapWithEnforceFunction_","argNumber","wrapFunction_","originalFn","wrapSetAttribute_","setAttributeWrapper_","bind","setAttributeNSWrapper_","installScriptMutatorGuards_","fnName","enforceTypeInScriptNodes_","insertAdjacentTextWrapper_","installPropertySetWrappers_","install","config_","ShadowRoot","doc","createRange","r","createContextualFragment","f","toString","childNodes","Range","Document","HTMLDocument","DOMParser","functionBody","maybeCallDefaultPolicy_","typeName","sink","fallbackPolicy","processViolation_","context","propertyName","typeToEnforce","contextName","message","blockedURI","baseURI","href","valueSlice","event","location","isConnected","dispatchEvent","TrustedTypesEnforcer","config","attrName","requiredType","checkParent","objToCheck","parentNode","HTMLScriptElement","arg","nodeType","TEXT_NODE","textContent","createTextNode","fallbackValue","exceptionThrown","riskyPositions","parentElement","includes","textNode","insertBefore","nextSibling","isInlineEventHandler","objName","localName","publicApi","tt","detectPolicy","currentScript","scripts","getElementsByTagName","bodyPrefix","substr","dataset","cspInMeta","head","querySelector","rootProperty","csp","TrustedTypeConfig$$module$src$data$trustedtypeconfig.fromCSP","trustedTypesEnforcer"],"mappings":"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","file":"trustedtypes.build.js","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * CSP Directive name controlling Trusted Types behavior.\n * @type {string}\n */\nexport const DIRECTIVE_NAME = 'trusted-types';\n\n/**\n * A configuration object for trusted type enforcement.\n */\nexport class TrustedTypeConfig {\n  /**\n   * @param {boolean} isLoggingEnabled If true enforcement wrappers will log\n   *   violations to the console.\n   * @param {boolean} isEnforcementEnabled If true enforcement is enabled at\n   *   runtime.\n   * @param {Array<string>} allowedPolicyNames Whitelisted policy names.\n   * @param {?string} cspString String with the CSP policy.\n   */\n  constructor(isLoggingEnabled,\n      isEnforcementEnabled,\n      allowedPolicyNames,\n      cspString = null) {\n    /**\n      * True if logging is enabled.\n      * @type {boolean}\n      */\n    this.isLoggingEnabled = isLoggingEnabled;\n\n    /**\n      * True if enforcement is enabled.\n      * @type {boolean}\n      */\n    this.isEnforcementEnabled = isEnforcementEnabled;\n\n    /**\n     * Allowed policy names.\n     * @type {Array<string>}\n     */\n    this.allowedPolicyNames = allowedPolicyNames;\n\n    /**\n     * CSP string that defined the policy.\n     * @type {?string}\n     */\n    this.cspString = cspString;\n  }\n\n  /**\n   * Parses a CSP policy.\n   * @link https://www.w3.org/TR/CSP3/#parse-serialized-policy\n   * @param  {string} cspString String with a CSP definition.\n   * @return {Object<string,Array<string>>} Parsed CSP, keyed by directive\n   *   names.\n   */\n  static parseCSP(cspString) {\n    const SEMICOLON = /\\s*;\\s*/;\n    const WHITESPACE = /\\s+/;\n    return cspString.trim().split(SEMICOLON)\n        .map((serializedDirective) => serializedDirective.split(WHITESPACE))\n        .reduce(function(parsed, directive) {\n          if (directive[0]) {\n            parsed[directive[0]] = directive.slice(1).map((s) => s).sort();\n          }\n          return parsed;\n        }, {});\n  }\n\n  /**\n   * Creates a TrustedTypeConfig object from a CSP string.\n   * @param  {string} cspString\n   * @return {!TrustedTypeConfig}\n   */\n  static fromCSP(cspString) {\n    const isLoggingEnabled = true;\n    const policy = TrustedTypeConfig.parseCSP(cspString);\n    const enforce = DIRECTIVE_NAME in policy;\n    let policies = ['*'];\n    if (enforce) {\n      policies = policy[DIRECTIVE_NAME].filter((p) => p.charAt(0) !== '\\'');\n    }\n\n    return new TrustedTypeConfig(\n        isLoggingEnabled,\n        enforce, /* isEnforcementEnabled */\n        policies, /* allowedPolicyNames */\n        cspString\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nimport {getUnsafeAttributeEventHandlers} from './utils/eventHandlers.js';\n\nconst isBrowser = typeof window !== 'undefined';\n\nconst rejectInputFn = (s) => {\n  throw new TypeError('undefined conversion');\n};\n\nconst {toLowerCase, toUpperCase} = String.prototype;\n\nexport const HTML_NS = 'http://www.w3.org/1999/xhtml';\nexport const XLINK_NS = 'http://www.w3.org/1999/xlink';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * @constructor\n * @property {!function(string):TrustedHTML} createHTML\n * @property {!function(string):TrustedURL} createURL\n * @property {!function(string):TrustedScriptURL} createScriptURL\n * @property {!function(string):TrustedScript} createScript\n * @property {!string} name\n */\nexport const TrustedTypePolicy = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/**\n * @constructor\n */\nexport const TrustedTypePolicyFactory = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {TrustedTypesInnerPolicy}\n * @property {function(string):string} createHTML\n * @property {function(string):string} createURL\n * @property {function(string):string} createScriptURL\n * @property {function(string):string} createScript\n */\nconst TrustedTypesInnerPolicy = {};\n\n/**\n * @typedef {!Object<string, {\n *   attributes: !Object<string, string>,\n *   properties: !Object<string, string>}>}\n */\nconst TrustedTypesTypeMap = {};\n/* eslint-enable no-unused-vars */\n\nexport const DEFAULT_POLICY_NAME = 'default';\n\n\nexport const trustedTypesBuilderTestOnly = function() {\n  // Capture common names early.\n  const {\n    assign, create, defineProperty, freeze, getOwnPropertyNames,\n    getPrototypeOf, prototype: ObjectPrototype,\n  } = Object;\n\n  const {hasOwnProperty} = ObjectPrototype;\n\n  const {\n    forEach, push,\n  } = Array.prototype;\n\n  const creatorSymbol = Symbol();\n\n  /**\n   * Getter for the privateMap.\n   * @param  {Object} obj Key of the privateMap\n   * @return {Object<string, string>} Private storage.\n   */\n  const privates = function(obj) {\n    let v = privateMap.get(obj);\n    if (v === undefined) {\n      v = create(null); // initialize the private storage.\n      privateMap.set(obj, v);\n    }\n    return v;\n  };\n\n  /**\n   * Called before attacker-controlled code on an internal collections,\n   * copies prototype members onto the instance directly, so that later\n   * changes to prototypes cannot expose collection internals.\n   * @param {!T} collection\n   * @return {!T} collection\n   * @template T\n   */\n  function selfContained(collection) {\n    const proto = getPrototypeOf(collection);\n    if (proto == null || getPrototypeOf(proto) !== ObjectPrototype) {\n      throw new Error(); // Loop below is insufficient.\n    }\n    for (const key of getOwnPropertyNames(proto)) {\n      defineProperty(collection, key, {value: collection[key]});\n    }\n    return collection;\n  }\n\n  /**\n   * Map for private properties of Trusted Types object.\n   * This is so that the access to the type constructor does not give\n   * the ability to create typed values.\n   * @type {WeakMap}\n   */\n  const privateMap = selfContained(new WeakMap());\n\n  /**\n   * List of all configured policy names.\n   * @type {Array<string>}\n   */\n  const policyNames = selfContained([]);\n\n  /**\n   * Allowed policy namess for policy names.\n   * @type {Array<string>}\n   */\n  const allowedNames = selfContained([]);\n\n  /**\n   * A reference to a default policy, if created.\n   * @type {TrustedTypePolicy}\n   */\n  let defaultPolicy = null;\n\n  /**\n   * Whether to enforce allowedNames in createPolicy().\n   * @type {boolean}\n   */\n  let enforceNameWhitelist = false;\n\n\n  /**\n   * A value that is trusted to have certain security-relevant properties\n   * because the sources of such values are controlled.\n   */\n  class TrustedType {\n    /**\n     * Constructor for TrustedType. Only allowed to be called from within a\n     * policy.\n     * @param {symbol} s creatorSymbol\n     * @param {string} policyName The name of the policy this object was\n     *   created by.\n     */\n    constructor(s, policyName) {\n      // TODO: Figure out if symbol is needed, if the value is in privateMap.\n      if (s !== creatorSymbol) {\n        throw new Error('cannot call the constructor');\n      }\n      defineProperty(this, 'policyName',\n          {value: '' + policyName, enumerable: true});\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    toString() {\n      return privates(this)['v'];\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    valueOf() {\n      return privates(this)['v'];\n    }\n  }\n\n  /**\n   * @param {function(new:TrustedType, symbol, string)} SubClass\n   * @param {string} canonName The class name which should be independent of\n   *     any renaming pass and which is relied upon by the enforcer and for\n   *     native type interop.\n   */\n  function lockdownTrustedType(SubClass, canonName) {\n    freeze(SubClass.prototype);\n    delete SubClass.name;\n    defineProperty(SubClass, 'name', {value: canonName});\n  }\n\n  /**\n   * Trusted URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedURL, 'TrustedURL');\n\n  /**\n   * Trusted Script URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScriptURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScriptURL, 'TrustedScriptURL');\n\n  /**\n   * Trusted HTML object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedHTML extends TrustedType {\n  }\n  lockdownTrustedType(TrustedHTML, 'TrustedHTML');\n\n  /**\n   * Trusted Script object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScript extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScript, 'TrustedScript');\n\n  lockdownTrustedType(TrustedType, 'TrustedType');\n\n  // Common constants.\n  const emptyHTML = freeze(create(new TrustedHTML(creatorSymbol, '')));\n  privates(emptyHTML)['v'] = '';\n\n  /**\n   * A map of attribute / property names to allowed types\n   * for known namespaces.\n   * @type {!Object<string,!TrustedTypesTypeMap>}\n   * @export\n   */\n  const TYPE_MAP = {\n    [HTML_NS]: {\n      // TODO(koto): Figure out what to to with <link>\n      'A': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n      },\n      'AREA': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n      },\n      'BASE': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n      },\n      'BUTTON': {\n        'attributes': {\n          'formaction': TrustedURL.name,\n        },\n      },\n      'EMBED': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n        },\n      },\n      'FORM': {\n        'attributes': {\n          'action': TrustedURL.name,\n        },\n      },\n      'FRAME': {\n        'attributes': {\n          'src': TrustedURL.name,\n        },\n      },\n      'IFRAME': {\n        'attributes': {\n          'src': TrustedURL.name,\n          'srcdoc': TrustedHTML.name,\n        },\n      },\n      'INPUT': {\n        'attributes': {\n          'formaction': TrustedURL.name,\n        },\n      },\n      'OBJECT': {\n        'attributes': {\n          'data': TrustedScriptURL.name,\n          'codebase': TrustedScriptURL.name,\n        },\n      },\n      // TODO(koto): Figure out what to do with portals.\n      'SCRIPT': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n          'text': TrustedScript.name,\n        },\n        'properties': {\n          'innerText': TrustedScript.name,\n          'textContent': TrustedScript.name,\n          'text': TrustedScript.name,\n        },\n      },\n      '*': {\n        'attributes': {},\n        'properties': {\n          'innerHTML': TrustedHTML.name,\n          'outerHTML': TrustedHTML.name,\n        },\n      },\n    },\n    [XLINK_NS]: {\n      '*': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n        'properties': {},\n      },\n    },\n    [SVG_NS]: {\n      '*': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n        'properties': {},\n      },\n    },\n  };\n\n  /**\n   * A map of element property to HTML attribute names.\n   * @type {!Object<string, string>}\n   */\n  const ATTR_PROPERTY_MAP = {\n    'codebase': 'codeBase',\n    'formaction': 'formAction',\n  };\n\n  // Edge doesn't support srcdoc.\n  if (isBrowser && !('srcdoc' in HTMLIFrameElement.prototype)) {\n    delete TYPE_MAP[HTML_NS]['IFRAME']['attributes']['srcdoc'];\n  }\n\n  // in HTML, clone attributes into properties.\n  for (const tag of Object.keys(TYPE_MAP[HTML_NS])) {\n    if (!TYPE_MAP[HTML_NS][tag]['properties']) {\n      TYPE_MAP[HTML_NS][tag]['properties'] = {};\n    }\n    for (const attr of Object.keys(TYPE_MAP[HTML_NS][tag]['attributes'])) {\n      TYPE_MAP[HTML_NS][tag]['properties'][\n          ATTR_PROPERTY_MAP[attr] ? ATTR_PROPERTY_MAP[attr] : attr\n      ] = TYPE_MAP[HTML_NS][tag]['attributes'][attr];\n    }\n  }\n\n  // Add inline event handlers attribute names.\n  for (const name of getUnsafeAttributeEventHandlers()) {\n    TYPE_MAP[HTML_NS]['*']['attributes'][name] = 'TrustedScript';\n    TYPE_MAP[SVG_NS]['*']['attributes'][name] = 'TrustedScript';\n  }\n\n  /**\n   * @type {!Object<string,!Function>}\n   */\n  const createTypeMapping = {\n    'createHTML': TrustedHTML,\n    'createScriptURL': TrustedScriptURL,\n    'createURL': TrustedURL,\n    'createScript': TrustedScript,\n  };\n\n  const createFunctionAllowed = createTypeMapping.hasOwnProperty;\n\n  /**\n   * Function generating a type checker.\n   * @template T\n   * @param  {T} type The type to check against.\n   * @return {function(*):boolean}\n   */\n  function isTrustedTypeChecker(type) {\n    return (obj) => (obj instanceof type) && privateMap.has(obj);\n  }\n\n  /**\n   * Wraps a user-defined policy rules with TT constructor\n   * @param  {string} policyName The policy name\n   * @param  {TrustedTypesInnerPolicy} innerPolicy InnerPolicy\n   * @return {!TrustedTypePolicy} Frozen policy object\n   */\n  function wrapPolicy(policyName, innerPolicy) {\n    /**\n     * @template T\n     * @param {function(new:T, symbol, string)} Ctor a trusted type constructor\n     * @param {string} methodName the policy factory method name\n     * @return {function(string):!T} a factory that produces instances of Ctor.\n     */\n    function creator(Ctor, methodName) {\n      // This causes thisValue to be null when called below.\n      const method = innerPolicy[methodName] || rejectInputFn;\n      const policySpecificType = freeze(new Ctor(creatorSymbol, policyName));\n      const factory = {\n        [methodName](s, ...args) {\n          // Trick to get methodName to show in stacktrace.\n          let result = method('' + s, ...args);\n          if (result === undefined || result === null) {\n            result = '';\n          }\n          const allowedValue = '' + result;\n          const o = freeze(create(policySpecificType));\n          privates(o)['v'] = allowedValue;\n          return o;\n        },\n      }[methodName];\n      return freeze(factory);\n    }\n\n    const policy = create(TrustedTypePolicy.prototype);\n\n    for (const name of getOwnPropertyNames(createTypeMapping)) {\n      policy[name] = creator(createTypeMapping[name], name);\n    }\n    defineProperty(policy, 'name', {\n      value: policyName,\n      writable: false,\n      configurable: false,\n      enumerable: true,\n    });\n\n    return /** @type {!TrustedTypePolicy} */ (freeze(policy));\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element\n   *   attribute.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} attribute The name of the attribute.\n   * @param {string=} elementNs Element namespace.\n   * @param {string=} attributeNs The attribute namespace.\n   * @return {string|undefined} Required type name or undefined, if a Trusted\n   *   Type is not required.\n   */\n  function getAttributeType(tagName, attribute, elementNs = '',\n      attributeNs = '') {\n    const canonicalAttr = toLowerCase.apply(String(attribute));\n    return getTypeInternal_(tagName, 'attributes', canonicalAttr,\n        elementNs, attributeNs);\n  }\n\n  /**\n   * Returns a type name from a type map.\n   * @param {string} tag A tag name.\n   * @param {string} container 'attributes' or 'properties'\n   * @param {string} name The attribute / property name.\n   * @param {string=} elNs Element namespace.\n   * @param {string=} attrNs Attribute namespace.\n   * @return {string|undefined}\n   * @private\n   */\n  function getTypeInternal_(tag, container, name, elNs = '', attrNs = '') {\n    const canonicalTag = toUpperCase.apply(String(tag));\n\n    let ns = attrNs ? attrNs : elNs;\n    if (!ns) {\n      ns = HTML_NS;\n    }\n    const map = hasOwnProperty.apply(TYPE_MAP, [ns]) ? TYPE_MAP[ns] : null;\n    if (!map) {\n      return;\n    }\n    if (hasOwnProperty.apply(map, [canonicalTag]) &&\n        map[canonicalTag] &&\n        hasOwnProperty.apply(map[canonicalTag][container], [name]) &&\n        map[canonicalTag][container][name]) {\n      return map[canonicalTag][container][name];\n    }\n\n    if (hasOwnProperty.apply(map, ['*']) &&\n        hasOwnProperty.apply(map['*'][container], [name]) &&\n        map['*'][container][name]) {\n      return map['*'][container][name];\n    }\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element property.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} property The property.\n   * @param {string=} elementNs Element namespace.\n   * @return {string|undefined} Required type name or undefined, if a Trusted\n   *   Type is not required.\n   */\n  function getPropertyType(tagName, property, elementNs = '') {\n    // TODO: Support namespaces.\n    return getTypeInternal_(tagName, 'properties', String(property), elementNs);\n  }\n\n  /**\n   * Returns the type map-like object, that resolves a name of a type for a\n   * given tag + attribute / property in a given namespace.\n   * The keys of the map are uppercase tag names. Map entry has mappings between\n   * a lowercase attribute name / case-sensitive property name and a name of the\n   * type that is required for that attribute / property.\n   * Example entry for 'IMG': {\"attributes\": {\"src\": \"TrustedHTML\"}}\n   * @param {string=} namespaceUri The namespace URI (will use the current\n   *   document namespace URI if omitted).\n   * @return {TrustedTypesTypeMap}\n   */\n  function getTypeMapping(namespaceUri = '') {\n    if (!namespaceUri) {\n      try {\n        namespaceUri = document.documentElement.namespaceURI;\n      } catch (e) {\n        namespaceUri = HTML_NS;\n      }\n    }\n    /**\n     * @template T\n     * @private\n     * @param {T} o\n     * @return {T}\n     */\n    function deepClone(o) {\n      return JSON.parse(JSON.stringify(o));\n    }\n    const map = TYPE_MAP[namespaceUri];\n    if (!map) {\n      return {};\n    }\n    return deepClone(map);\n  }\n\n  /**\n   * Returns all configured policy names (even for non-exposed policies).\n   * @return {!Array<string>}\n   */\n  function getPolicyNames() {\n    // TODO(msamuel): Should we sort policyNames to avoid leaking or\n    // encouraging dependency on the order in which policy names are\n    // registered?  I think JavaScript builtin sorts are efficient for\n    // almost-sorted lists so the amortized cost is close to O(n).\n    return policyNames.slice();\n  }\n\n  /**\n   * Creates a TT policy.\n   *\n   * Returns a frozen object representing a policy - a collection of functions\n   * that may create TT objects based on the user-provided rules specified\n   * in the policy object.\n   *\n   * @param  {string} name A unique name of the policy.\n   * @param  {TrustedTypesInnerPolicy} policy Policy rules object.\n   * @return {TrustedTypePolicy} The policy that may create TT objects\n   *   according to the policy rules.\n   */\n  function createPolicy(name, policy) {\n    const pName = '' + name; // Assert it's a string\n\n    if (enforceNameWhitelist && allowedNames.indexOf(pName) === -1) {\n      throw new TypeError('Policy ' + pName + ' disallowed.');\n    }\n\n    if (policyNames.indexOf(pName) !== -1) {\n      throw new TypeError('Policy ' + pName + ' exists.');\n    }\n    // Register the name early so that if policy getters unwisely calls\n    // across protection domains to code that reenters this function,\n    // policy author still has rights to the name.\n    policyNames.push(pName);\n\n    // Only copy own properties of names present in createTypeMapping.\n    const innerPolicy = create(null);\n    if (policy && typeof policy === 'object') {\n      // Treat non-objects as empty policies.\n      for (const key of getOwnPropertyNames(policy)) {\n        if (createFunctionAllowed.call(createTypeMapping, key)) {\n          innerPolicy[key] = policy[key];\n        }\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('trustedTypes.createPolicy ' + pName +\n          ' was given an empty policy');\n    }\n    freeze(innerPolicy);\n\n    const wrappedPolicy = wrapPolicy(pName, innerPolicy);\n\n    if (pName === DEFAULT_POLICY_NAME) {\n      defaultPolicy = wrappedPolicy;\n    }\n\n    return wrappedPolicy;\n  }\n\n  /**\n   * Applies the policy name whitelist.\n   * @param {!Array<string>} allowedPolicyNames\n   */\n  function setAllowedPolicyNames(allowedPolicyNames) {\n    if (allowedPolicyNames.indexOf('*') !== -1) { // Any policy name is allowed.\n      enforceNameWhitelist = false;\n    } else {\n      enforceNameWhitelist = true;\n      allowedNames.length = 0;\n      forEach.call(allowedPolicyNames, (el) => {\n        push.call(allowedNames, '' + el);\n      });\n    }\n  }\n\n  /**\n   * Returns the default policy, or null if it was not created.\n   * @return {TrustedTypePolicy}\n   */\n  function getDefaultPolicy() {\n    return defaultPolicy;\n  }\n\n  /**\n   * Resets the default policy.\n   */\n  function resetDefaultPolicy() {\n    defaultPolicy = null;\n    policyNames.splice(policyNames.indexOf(DEFAULT_POLICY_NAME), 1);\n  }\n\n  const api = create(TrustedTypePolicyFactory.prototype);\n  assign(api, {\n    // The main function to create policies.\n    createPolicy,\n\n    getPolicyNames,\n\n    // Type checkers, also validating the object was initialized through a\n    // policy.\n    isHTML: isTrustedTypeChecker(TrustedHTML),\n    isURL: isTrustedTypeChecker(TrustedURL),\n    isScriptURL: isTrustedTypeChecker(TrustedScriptURL),\n    isScript: isTrustedTypeChecker(TrustedScript),\n\n    getAttributeType,\n    getPropertyType,\n    getTypeMapping,\n    emptyHTML,\n    defaultPolicy, // Just to make the compiler happy, this is overridden below.\n\n    TrustedHTML: TrustedHTML,\n    TrustedURL: TrustedURL,\n    TrustedScriptURL: TrustedScriptURL,\n    TrustedScript: TrustedScript,\n  });\n\n  defineProperty(api, 'defaultPolicy', {\n    get: getDefaultPolicy,\n    set: () => {},\n  });\n\n  return {\n    trustedTypes: freeze(api),\n    setAllowedPolicyNames,\n    getDefaultPolicy,\n    resetDefaultPolicy,\n  };\n};\n\n\nexport const {\n  trustedTypes,\n  setAllowedPolicyNames,\n  getDefaultPolicy,\n  resetDefaultPolicy,\n} = trustedTypesBuilderTestOnly();\n\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * Returns an array of all event handlers. Some of the event handlers may be\n * supported only in some browsers.\n *\n * For every event type that the browser supports, SVG supports that as an event\n * attribute, following the same requirements as for HTML event attributes.\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/Events\n *\n * @return {!Array<string>}\n */\nexport function getUnsafeAttributeEventHandlers() {\n  // TODO check attributes in safari, remove legacy safe handlers\n  return [\n    'onabort',\n    'onactivate',\n    'onactivateinvisible',\n    'onafterprint',\n    'onafterupdate',\n    'onanimationcancel',\n    'onanimationend',\n    'onanimationiteration',\n    'onanimationstart',\n    'onariarequest',\n    'onauxclick',\n    'onbeforeactivate',\n    'onbeforecopy',\n    'onbeforecut',\n    'onbeforedeactivate',\n    'onbeforeeditfocus',\n    'onbeforepaste',\n    'onbeforeprint',\n    'onbeforeunload',\n    'onbegin',\n    'onblur',\n    'onbounce',\n    'oncancel',\n    'oncanplay',\n    'oncanplaythrough',\n    'oncellchange',\n    'onchange',\n    'onclick',\n    'onclose',\n    'oncommand',\n    'oncontextmenu',\n    'oncontrolselect',\n    'oncopy',\n    'oncuechange',\n    'oncut',\n    'ondataavailable',\n    'ondatasetchanged',\n    'ondatasetcomplete',\n    'ondblclick',\n    'ondeactivate',\n    'ondrag',\n    'ondragdrop',\n    'ondragend',\n    'ondragenter',\n    'ondragexit',\n    'ondragleave',\n    'ondragover',\n    'ondragstart',\n    'ondrop',\n    'ondurationchange',\n    'onemptied',\n    'onend',\n    'onended',\n    'onerror',\n    'onerrorupdate',\n    'onexit',\n    'onfilterchange',\n    'onfinish',\n    'onfocus',\n    'onfocusin',\n    'onfocusout',\n    'onformdata',\n    'onfullscreenchange',\n    'onfullscreenerror',\n    'ongotpointercapture',\n    'onhelp',\n    'oninput',\n    'oninvalid',\n    'onkeydown',\n    'onkeypress',\n    'onkeyup',\n    'onlayoutcomplete',\n    'onload',\n    'onloadeddata',\n    'onloadedmetadata',\n    'onloadend',\n    'onloadstart',\n    'onlosecapture',\n    'onlostpointercapture',\n    'onmediacomplete',\n    'onmediaerror',\n    'onmessage',\n    'onmousedown',\n    'onmouseenter',\n    'onmouseleave',\n    'onmousemove',\n    'onmouseout',\n    'onmouseover',\n    'onmouseup',\n    'onmousewheel',\n    'onmove',\n    'onmoveend',\n    'onmovestart',\n    'onmozfullscreenchange',\n    'onmozfullscreenerror',\n    'onmscontentzoom',\n    'onmsgesturechange',\n    'onmsgesturedoubletap',\n    'onmsgestureend',\n    'onmsgesturehold',\n    'onmsgesturestart',\n    'onmsgesturetap',\n    'onmsgotpointercapture',\n    'onmsinertiastart',\n    'onmslostpointercapture',\n    'onmsmanipulationstatechanged',\n    'onmspointercancel',\n    'onmspointerdown',\n    'onmspointerenter',\n    'onmspointerleave',\n    'onmspointermove',\n    'onmspointerout',\n    'onmspointerover',\n    'onmspointerup',\n    'onoffline',\n    'ononline',\n    'onoutofsync',\n    'onoverscroll',\n    'onpaste',\n    'onpause',\n    'onplay',\n    'onplaying',\n    'onpointercancel',\n    'onpointerdown',\n    'onpointerenter',\n    'onpointerleave',\n    'onpointermove',\n    'onpointerout',\n    'onpointerover',\n    'onpointerrawupdate',\n    'onpointerup',\n    'onprogress',\n    'onpropertychange',\n    'onratechange',\n    'onreadystatechange',\n    'onrepeat',\n    'onreset',\n    'onresize',\n    'onresizeend',\n    'onresizestart',\n    'onresume',\n    'onreverse',\n    'onrowdelete',\n    'onrowenter',\n    'onrowexit',\n    'onrowinserted',\n    'onscroll',\n    'onscrollend',\n    'onsearch',\n    'onseek',\n    'onseeked',\n    'onseeking',\n    'onselect',\n    'onselectionchange',\n    'onselectstart',\n    'onshow',\n    'onstalled',\n    'onstart',\n    'onstop',\n    'onstorage',\n    'onsubmit',\n    'onsuspend',\n    'onsynchrestored',\n    'ontimeerror',\n    'ontimeupdate',\n    'ontoggle',\n    'ontrackchange',\n    'ontransitioncancel',\n    'ontransitionend',\n    'ontransitionrun',\n    'ontransitionstart',\n    'onunload',\n    'onurlflip',\n    'onvolumechange',\n    'onwaiting',\n    'onwebkitanimationend',\n    'onwebkitanimationiteration',\n    'onwebkitanimationstart',\n    'onwebkitfullscreenchange',\n    'onwebkitfullscreenerror',\n    'onwebkittransitionend',\n    'onwheel',\n  ];\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nconst {\n  defineProperty,\n} = Object;\n\n/**\n * Installs the setter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} setter A setter function}\n */\nexport function installSetter(object, name, setter) {\n  const descriptor = {\n    set: setter,\n  };\n  defineProperty(object, name, descriptor);\n}\n\n/**\n * Installs a setter and getter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} setter A setter function}\n * @param {function(*): *|undefined} getter A getter function}\n */\nexport function installSetterAndGetter(object, name, setter, getter) {\n  const descriptor = {\n    set: setter,\n    get: getter,\n    configurable: true, // This can get uninstalled, we need configurable: true\n  };\n  defineProperty(object, name, descriptor);\n}\n\n/**\n * Installs the setter of a given property.\n * @param {!Object} object An object for which to wrap the property.\n * @param {string} name The name of the property to wrap.\n * @param {function(*): *|undefined} fn A function}\n */\nexport function installFunction(object, name, fn) {\n  defineProperty(object, name, {\n    value: fn,\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n// TrustedTypeConfig is used only as jsdoc type\n// eslint-disable-next-line\nimport {DIRECTIVE_NAME, TrustedTypeConfig} from './data/trustedtypeconfig.js';\nimport {\n  trustedTypes as TrustedTypes,\n  setAllowedPolicyNames,\n  resetDefaultPolicy,\n  HTML_NS,\n} from\n  './trustedtypes.js';\n\nimport {installFunction, installSetter, installSetterAndGetter}\n  from './utils/wrapper.js';\n\nconst {apply} = Reflect;\nconst {\n  getOwnPropertyNames,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n} = Object;\n\nconst {\n  hasOwnProperty,\n  isPrototypeOf,\n} = Object.prototype;\n\nconst {slice} = String.prototype;\n\n// No URL in IE 11.\nconst UrlConstructor = typeof window.URL == 'function' ?\n    URL.prototype.constructor :\n    null;\n\nlet stringifyForRangeHack;\n\n/**\n * Return object constructor name\n * (their function.name is not available in IE 11).\n * @param {*} fn\n * @return {string}\n * @private\n */\nconst getConstructorName_ = document.createElement('div').constructor.name ?\n    (fn) => fn.name :\n    (fn) => ('' + fn).match(/^\\[object (\\S+)\\]$/)[1];\n\n// window.open on IE 11 is set on WindowPrototype\nconst windowOpenObject = getOwnPropertyDescriptor(window, 'open') ?\n  window :\n  window.constructor.prototype;\n\n// In IE 11, insertAdjacent(HTML|Text) is on HTMLElement prototype\nconst insertAdjacentObject = apply(hasOwnProperty, Element.prototype,\n    ['insertAdjacentHTML']) ? Element.prototype : HTMLElement.prototype;\n\n// This is not available in release Firefox :(\n// https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1432523\nconst SecurityPolicyViolationEvent = window['SecurityPolicyViolationEvent'] ||\n  null;\n\n/**\n * Parses URL, catching all the errors.\n * @param  {string} url URL string to parse.\n * @return {URL|null}\n */\nfunction parseUrl_(url) {\n  try {\n    return new UrlConstructor(url, document.baseURI || undefined);\n  } catch (e) {\n    return null;\n  }\n}\n\n// We don't actually need other namespaces.\n// setAttribute is hooked on Element.prototype, which all elements inherit from,\n// and all sensitive property wrappers are hooked directly on Element as well.\nconst typeMap = TrustedTypes.getTypeMapping(HTML_NS);\n\nconst STRING_TO_TYPE = {\n  'TrustedHTML': TrustedTypes.TrustedHTML,\n  'TrustedScript': TrustedTypes.TrustedScript,\n  'TrustedScriptURL': TrustedTypes.TrustedScriptURL,\n  'TrustedURL': TrustedTypes.TrustedURL,\n};\n\n/**\n * Converts an uppercase tag name to an element constructor function name.\n * Used for property setter hijacking only.\n * @param {string} tagName\n * @return {string}\n */\nfunction convertTagToConstructor(tagName) {\n  if (tagName == '*') {\n    return 'HTMLElement';\n  }\n  return getConstructorName_(document.createElement(tagName).constructor);\n}\n\nfor (const tagName of Object.keys(typeMap)) {\n  const attrs = typeMap[tagName]['properties'];\n  for (const [k, v] of Object.entries(attrs)) {\n    attrs[k] = STRING_TO_TYPE[v];\n  }\n}\n\n/**\n * Map of type names to type checking function.\n * @type {!Object<string,!Function>}\n */\nconst TYPE_CHECKER_MAP = {\n  'TrustedHTML': TrustedTypes.isHTML,\n  'TrustedURL': TrustedTypes.isURL,\n  'TrustedScriptURL': TrustedTypes.isScriptURL,\n  'TrustedScript': TrustedTypes.isScript,\n};\n\n/**\n * Map of type names to type producing function.\n * @type {Object<string,string>}\n */\nconst TYPE_PRODUCER_MAP = {\n  'TrustedHTML': 'createHTML',\n  'TrustedURL': 'createURL',\n  'TrustedScriptURL': 'createScriptURL',\n  'TrustedScript': 'createScript',\n};\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {TrustedTypePolicy}\n * @property {function(string):TrustedHTML} createHTML\n * @property {function(string):TrustedURL} createURL\n * @property {function(string):TrustedScriptURL} createScriptURL\n * @property {function(string):TrustedScript} createScript\n */\nconst TrustedTypePolicy = {};\n/* eslint-enable no-unused-vars */\n\n\n/**\n * An object for enabling trusted type enforcement.\n */\nexport class TrustedTypesEnforcer {\n  /**\n   * @param {!TrustedTypeConfig} config The configuration for\n   * trusted type enforcement.\n   */\n  constructor(config) {\n    /**\n     * A configuration for the trusted type enforcement.\n     * @private {!TrustedTypeConfig}\n     */\n    this.config_ = config;\n    /**\n     * @private {Object<string, function(*): *|undefined>}\n     */\n    this.originalSetters_ = {};\n  }\n\n  /**\n   * Wraps HTML sinks with an enforcement setter, which will enforce\n   * trusted types and do logging, if enabled.\n   *\n   */\n  install() {\n    setAllowedPolicyNames(this.config_.allowedPolicyNames);\n\n    if (!this.config_.isEnforcementEnabled && !this.config_.isLoggingEnabled) {\n      return;\n    }\n\n    if ('ShadowRoot' in window) {\n      this.wrapSetter_(ShadowRoot.prototype, 'innerHTML',\n          TrustedTypes.TrustedHTML);\n    }\n    stringifyForRangeHack = (function(doc) {\n      const r = doc.createRange();\n      // In IE 11 Range.createContextualFragment doesn't stringify its argument.\n      const f = r.createContextualFragment(/** @type {string} */ (\n        {toString: () => '<div></div>'}));\n      return f.childNodes.length == 0;\n    })(document);\n\n    this.wrapWithEnforceFunction_(Range.prototype, 'createContextualFragment',\n        TrustedTypes.TrustedHTML, 0);\n\n    this.wrapWithEnforceFunction_(insertAdjacentObject,\n        'insertAdjacentHTML',\n        TrustedTypes.TrustedHTML, 1);\n\n    if (getOwnPropertyDescriptor(Document.prototype, 'write')) {\n      // Chrome\n      this.wrapWithEnforceFunction_(Document.prototype, 'write',\n          TrustedTypes.TrustedHTML, 0);\n      this.wrapWithEnforceFunction_(Document.prototype, 'open',\n          TrustedTypes.TrustedURL, 0);\n    } else {\n      // Firefox\n      this.wrapWithEnforceFunction_(HTMLDocument.prototype, 'write',\n          TrustedTypes.TrustedHTML, 0);\n      this.wrapWithEnforceFunction_(HTMLDocument.prototype, 'open',\n          TrustedTypes.TrustedURL, 0);\n    }\n\n    this.wrapWithEnforceFunction_(windowOpenObject, 'open',\n        TrustedTypes.TrustedURL, 0);\n\n    if ('DOMParser' in window) {\n      this.wrapWithEnforceFunction_(DOMParser.prototype, 'parseFromString',\n          TrustedTypes.TrustedHTML, 0);\n    }\n    this.wrapWithEnforceFunction_(window, 'setInterval',\n        TrustedTypes.TrustedScript, 0);\n    this.wrapWithEnforceFunction_(window, 'setTimeout',\n        TrustedTypes.TrustedScript, 0);\n    this.wrapSetAttribute_();\n    this.installScriptMutatorGuards_();\n    this.installPropertySetWrappers_();\n  }\n\n  /**\n   * Removes the original setters.\n   */\n  uninstall() {\n    setAllowedPolicyNames(['*']);\n\n    if (!this.config_.isEnforcementEnabled && !this.config_.isLoggingEnabled) {\n      return;\n    }\n\n    if ('ShadowRoot' in window) {\n      this.restoreSetter_(ShadowRoot.prototype, 'innerHTML');\n    }\n    this.restoreFunction_(Range.prototype, 'createContextualFragment');\n    this.restoreFunction_(insertAdjacentObject, 'insertAdjacentHTML');\n    this.restoreFunction_(Element.prototype, 'setAttribute');\n    this.restoreFunction_(Element.prototype, 'setAttributeNS');\n\n    if (getOwnPropertyDescriptor(Document.prototype, 'write')) {\n      this.restoreFunction_(Document.prototype, 'write');\n      this.restoreFunction_(Document.prototype, 'open');\n    } else {\n      this.restoreFunction_(HTMLDocument.prototype, 'write');\n      this.restoreFunction_(HTMLDocument.prototype, 'open');\n    }\n    this.restoreFunction_(windowOpenObject, 'open');\n\n    if ('DOMParser' in window) {\n      this.restoreFunction_(DOMParser.prototype, 'parseFromString');\n    }\n    this.restoreFunction_(window, 'setTimeout');\n    this.restoreFunction_(window, 'setInterval');\n    this.uninstallPropertySetWrappers_();\n    this.uninstallScriptMutatorGuards_();\n    resetDefaultPolicy();\n  }\n\n  /**\n   * Installs type-enforcing wrappers for APIs that allow to modify\n   * script element texts.\n   * @private\n   */\n  installScriptMutatorGuards_() {\n    const that = this;\n\n    ['appendChild', 'insertBefore', 'replaceChild'].forEach((fnName) => {\n      this.wrapFunction_(\n          Node.prototype,\n          fnName,\n          /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n          function(originalFn, ...args) {\n            return that.enforceTypeInScriptNodes_\n                .bind(that, this, /* checkParent */ false, originalFn)\n                .apply(that, args);\n          });\n    });\n    this.wrapFunction_(\n        insertAdjacentObject,\n        'insertAdjacentText',\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.insertAdjacentTextWrapper_\n              .bind(that, this, originalFn)\n              .apply(that, args);\n        });\n\n    if ('after' in Element.prototype) {\n      ['after', 'before', 'replaceWith'].forEach((fnName) => {\n        this.wrapFunction_(\n            Element.prototype,\n            fnName,\n            /**\n           * @this {TrustedTypesEnforcer}\n           * @param {function(!Function, ...*)} originalFn\n           * @return {*}\n           */\n            function(originalFn, ...args) {\n              return that.enforceTypeInScriptNodes_\n                  .bind(that, this, /* checkParent */ true, originalFn)\n                  .apply(that, args);\n            });\n      });\n      ['append', 'prepend'].forEach((fnName) => {\n        this.wrapFunction_(\n            Element.prototype,\n            fnName,\n            /**\n           * @this {TrustedTypesEnforcer}\n           * @param {function(!Function, ...*)} originalFn\n           * @return {*}\n           */\n            function(originalFn, ...args) {\n              return that.enforceTypeInScriptNodes_\n                  .bind(that, this, /* checkParent */ false, originalFn)\n                  .apply(that, args);\n            });\n      });\n    }\n  }\n\n  /**\n   * Uninstalls type-enforcing wrappers for APIs that allow to modify\n   * script element texts.\n   * @private\n   */\n  uninstallScriptMutatorGuards_() {\n    this.restoreFunction_(Node.prototype, 'appendChild');\n    this.restoreFunction_(Node.prototype, 'insertBefore');\n    this.restoreFunction_(Node.prototype, 'replaceChild');\n    this.restoreFunction_(insertAdjacentObject, 'insertAdjacentText');\n    if ('after' in Element.prototype) {\n      ['after', 'before', 'replaceWith', 'append', 'prepend'].forEach(\n          (fnName) => this.restoreFunction_(Element.prototype, fnName));\n    }\n  }\n\n  /**\n   * Installs wrappers for directly setting properties\n   * based on the type map.\n   * @private\n   */\n  installPropertySetWrappers_() {\n    /* eslint-disable guard-for-in */\n    for (const tag of getOwnPropertyNames(typeMap)) {\n      for (const property of getOwnPropertyNames(typeMap[tag]['properties'])) {\n        this.wrapSetter_(\n            window[convertTagToConstructor(tag)].prototype,\n            property,\n            typeMap[tag]['properties'][property]);\n      }\n    }\n  }\n\n  /**\n   * Uninstalls wrappers for directly setting properties\n   * based on the type map.\n   * @private\n   */\n  uninstallPropertySetWrappers_() {\n    /* eslint-disable guard-for-in */\n    for (const tag of getOwnPropertyNames(typeMap)) {\n      for (const property of getOwnPropertyNames(typeMap[tag]['properties'])) {\n        this.restoreSetter_(\n            window[convertTagToConstructor(tag)].prototype,\n            property);\n      }\n    }\n  }\n\n  /** Wraps set attribute with an enforcement function. */\n  wrapSetAttribute_() {\n    const that = this;\n    this.wrapFunction_(\n        Element.prototype,\n        'setAttribute',\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.setAttributeWrapper_\n              .bind(that, this, originalFn)\n              .apply(that, args);\n        });\n    this.wrapFunction_(\n        Element.prototype,\n        'setAttributeNS',\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.setAttributeNSWrapper_\n              .bind(that, this, originalFn)\n              .apply(that, args);\n        });\n  }\n\n  /**\n   * Enforces type checking for Element.prototype.setAttribute.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original setAttribute function.\n   * @return {*}\n   */\n  setAttributeWrapper_(context, originalFn, ...args) {\n    // Note(slekies): In a normal application constructor should never be null.\n    // However, there are no guarantees. If the constructor is null, we cannot\n    // determine whether a special type is required. In order to not break the\n    // application, we will not do any further type checks and pass the call\n    // to setAttribute.\n    if (context.constructor !== null && context instanceof Element) {\n      const attrName = (args[0] = String(args[0])).toLowerCase();\n      const requiredType = TrustedTypes.getAttributeType(context.tagName,\n          attrName, context.namespaceURI);\n      if (requiredType && apply(hasOwnProperty, STRING_TO_TYPE,\n          [requiredType])) {\n        return this.enforce_(\n            context, 'setAttribute', STRING_TO_TYPE[requiredType],\n            originalFn, 1, args);\n      }\n    }\n    return apply(originalFn, context, args);\n  }\n\n  /**\n   * Enforces type checking for Element.prototype.setAttributeNS.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original setAttributeNS function.\n   * @return {*}\n   */\n  setAttributeNSWrapper_(context, originalFn, ...args) {\n    // See the note from setAttributeWrapper_ above.\n    if (context.constructor !== null && context instanceof Element) {\n      const ns = args[0] ? String(args[0]) : null;\n      args[0] = ns;\n      const attrName = (args[1] = String(args[1])).toLowerCase();\n      const requiredType = TrustedTypes.getAttributeType(context.tagName,\n          attrName, context.namespaceURI, ns);\n      if (requiredType && apply(hasOwnProperty, STRING_TO_TYPE,\n          [requiredType])) {\n        return this.enforce_(context, 'setAttributeNS',\n            STRING_TO_TYPE[requiredType],\n            originalFn, 2, args);\n      }\n    }\n    return apply(originalFn, context, args);\n  }\n\n  /**\n   * Wrapper for DOM mutator functions that enforces type checks if the context\n   * (or, optionally, its parent node) is a script node.\n   * For each argument, it will make sure that text nodes pass through a\n   * default policy, or generate a violation. To skip that check, pass\n   * TrustedScript objects instead.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {boolean} checkParent Check parent of context instead.\n   * @param {!Function} originalFn The original mutator function.\n   * @return {*}\n   */\n  enforceTypeInScriptNodes_(context, checkParent, originalFn, ...args) {\n    const objToCheck = checkParent ? context.parentNode : context;\n    if (objToCheck instanceof HTMLScriptElement && args.length > 0) {\n      for (let argNumber = 0; argNumber < args.length; argNumber++) {\n        let arg = args[argNumber];\n        if (arg instanceof Node && arg.nodeType !== Node.TEXT_NODE) {\n          continue; // Type is not interesting\n        }\n        if (arg instanceof Node && arg.nodeType == Node.TEXT_NODE) {\n          arg = arg.textContent;\n        } else if (TrustedTypes.isScript(arg)) {\n          // TODO(koto): Consider removing this branch, as it's hard to spec.\n          // Convert to text node and go on.\n          args[argNumber] = document.createTextNode(arg);\n          continue;\n        }\n\n        // Try to run a default policy on argsthe argument\n        let fallbackValue;\n        let exceptionThrown;\n        try {\n          fallbackValue = this.maybeCallDefaultPolicy_(\n              'TrustedScript', arg, 'script.text');\n        } catch (e) {\n          exceptionThrown = true;\n        }\n        if (exceptionThrown) {\n          this.processViolation_(context, originalFn.name,\n              TrustedTypes.TrustedScript, arg);\n        }\n        args[argNumber] = document.createTextNode('' + fallbackValue);\n      }\n    }\n    return apply(originalFn, context, args);\n  }\n\n  /**\n   * Wrapper for Element.insertAdjacentText that enforces type checks for\n   * inserting text into a script node.\n   * @param {!Object} context The context for the call to the original function.\n   * @param {!Function} originalFn The original insertAdjacentText function.\n   */\n  insertAdjacentTextWrapper_(context, originalFn, ...args) {\n    const riskyPositions = ['beforebegin', 'afterend'];\n    if (context instanceof Element &&\n        context.parentElement instanceof HTMLScriptElement &&\n        args.length > 1 &&\n        riskyPositions.includes(args[0]) &&\n        !(TrustedTypes.isScript(args[1]))) {\n      // Run a default policy on args[1]\n      let fallbackValue;\n      let exceptionThrown;\n      try {\n        fallbackValue = this.maybeCallDefaultPolicy_('TrustedScript',\n            args[1], 'script.text');\n      } catch (e) {\n        exceptionThrown = true;\n      }\n      if (exceptionThrown) {\n        this.processViolation_(context, 'insertAdjacentText',\n            TrustedTypes.TrustedScript, args[1]);\n      }\n\n      const textNode = document.createTextNode('' + fallbackValue);\n\n\n      const insertBefore = /** @type function(this: Node) */(\n        this.originalSetters_[this.getKey_(Node.prototype, 'insertBefore')]);\n\n      switch (args[0]) {\n        case riskyPositions[0]: // 'beforebegin'\n          apply(insertBefore, context.parentElement,\n              [textNode, context]);\n          break;\n        case riskyPositions[1]: // 'afterend'\n          apply(insertBefore, context.parentElement,\n              [textNode, context.nextSibling]);\n          break;\n      }\n      return;\n    }\n    apply(originalFn, context, args);\n  }\n\n  /**\n   * Wraps a setter with the enforcement wrapper.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Function} type The type to enforce.\n   * @param {number} argNumber Number of the argument to enforce the type of.\n   * @private\n   */\n  wrapWithEnforceFunction_(object, name, type, argNumber) {\n    const that = this;\n    this.wrapFunction_(\n        object,\n        name,\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @param {function(!Function, ...*)} originalFn\n         * @return {*}\n         */\n        function(originalFn, ...args) {\n          return that.enforce_.call(that, this, name, type, originalFn,\n              argNumber, args);\n        });\n  }\n\n\n  /**\n   * Wraps an existing function with a given function body and stores the\n   * original function.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {function(!Function, ...*)} functionBody The wrapper function.\n   */\n  wrapFunction_(object, name, functionBody) {\n    const descriptor = getOwnPropertyDescriptor(object, name);\n    const originalFn = /** @type function(*):* */ (\n        descriptor ? descriptor.value : null);\n\n    if (!(originalFn instanceof Function)) {\n      throw new TypeError(\n          'Property ' + name + ' on object' + object + ' is not a function');\n    }\n\n    const key = this.getKey_(object, name);\n    if (this.originalSetters_[key]) {\n      throw new Error(\n          `TrustedTypesEnforcer: Double installation detected: ${key} ${name}`);\n    }\n    installFunction(\n        object,\n        name,\n        /**\n         * @this {TrustedTypesEnforcer}\n         * @return {*}\n         */\n        function(...args) {\n          return functionBody.bind(this, originalFn).apply(this, args);\n        });\n    this.originalSetters_[key] = originalFn;\n  }\n\n  /**\n   * Wraps a setter with the enforcement wrapper.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Function} type The type to enforce.\n   * @param {!Object=} descriptorObject If present, will reuse the\n   *   setter/getter from this one, instead of object. Used for redefining\n   *   setters in subclasses.\n   * @private\n   */\n  wrapSetter_(object, name, type, descriptorObject = undefined) {\n    if (descriptorObject && !isPrototypeOf.call(descriptorObject, object)) {\n      throw new Error('Invalid prototype chain');\n    }\n\n    let useObject = descriptorObject || object;\n    let descriptor;\n    let originalSetter;\n    const stopAt = getPrototypeOf(Node.prototype);\n\n    // Find the descriptor on the object or its prototypes, stopping at Node.\n    do {\n      descriptor = getOwnPropertyDescriptor(useObject, name);\n      originalSetter = /** @type {function(*):*} */ (descriptor ?\n          descriptor.set : null);\n      if (!originalSetter) {\n        useObject = getPrototypeOf(useObject) || stopAt;\n      }\n    } while (!(originalSetter || useObject === stopAt || !useObject));\n\n    if (!(originalSetter instanceof Function)) {\n      throw new TypeError(\n          'No setter for property ' + name + ' on object' + object);\n    }\n\n    const key = this.getKey_(object, name);\n    if (this.originalSetters_[key]) {\n      throw new Error(\n          `TrustedTypesEnforcer: Double installation detected: ${key} ${name}`);\n    }\n    const that = this;\n    /**\n     * @this {TrustedTypesEnforcer}\n     * @param {*} value\n     */\n    const enforcingSetter = function(value) {\n      that.enforce_.call(that, this, name, type, originalSetter, 0,\n          [value]);\n    };\n\n    if (useObject === object) {\n      installSetter(\n          object,\n          name,\n          enforcingSetter);\n    } else {\n      // Since we're creating a new setter in subclass, we also need to\n      // overwrite the getter.\n      installSetterAndGetter(\n          object,\n          name,\n          enforcingSetter,\n          descriptor.get\n      );\n    }\n    this.originalSetters_[key] = originalSetter;\n  }\n\n  /**\n   * Restores the original setter for the property, as encountered during\n   * install().\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @param {!Object=} descriptorObject If present, will restore the original\n   *   setter/getter from this one, instead of object.\n   * @private\n   */\n  restoreSetter_(object, name, descriptorObject = undefined) {\n    const key = this.getKey_(object, name);\n    if (descriptorObject && !isPrototypeOf.call(descriptorObject, object)) {\n      throw new Error('Invalid prototype chain');\n    }\n    if (!this.originalSetters_[key]) {\n      throw new Error(\n          // eslint-disable-next-line max-len\n          `TrustedTypesEnforcer: Cannot restore (double uninstallation?): ${key} ${name}`);\n    }\n    if (descriptorObject) {\n      // We have to also overwrite a getter.\n      installSetterAndGetter(object, name, this.originalSetters_[key],\n          getOwnPropertyDescriptor(descriptorObject, name).get);\n    } else {\n      installSetter(object, name, this.originalSetters_[key]);\n    }\n    delete this.originalSetters_[key];\n  }\n\n  /**\n   * Restores the original method of an object, as encountered during install().\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @private\n   */\n  restoreFunction_(object, name) {\n    const key = this.getKey_(object, name);\n    if (!this.originalSetters_[key]) {\n      throw new Error(\n          // eslint-disable-next-line max-len\n          `TrustedTypesEnforcer: Cannot restore (double uninstallation?): ${key} ${name}`);\n    }\n    installFunction(object, name, this.originalSetters_[key]);\n    delete this.originalSetters_[key];\n  }\n\n  /**\n   * Returns the key name for caching original setters.\n   * @param {!Object} object The object of the to-be-wrapped property.\n   * @param {string} name The name of the property.\n   * @return {string} Key name.\n   * @private\n   */\n  getKey_(object, name) {\n    // TODO(msamuel): Can we use Object.prototype.toString.call(object)\n    // to get an unspoofable string here?\n    // TODO(msamuel): fail on '-' in object.constructor.name?\n    // No Function.name in IE 11\n    const ctrName = '' + (\n      object.constructor.name ?\n      object.constructor.name :\n      object.constructor);\n    return ctrName + '-' + name;\n  }\n\n\n  /**\n   * Calls a default policy.\n   * @param {string} typeName Type name to attempt to produce from a value.\n   * @param {*} value The value to pass to a default policy\n   * @param {string} sink The sink name that the default policy will be called\n   *   with.\n   * @throws {Error} If the default policy throws, or not exist.\n   * @return {Function} The trusted value.\n   */\n  maybeCallDefaultPolicy_(typeName, value, sink = '') {\n    // Apply a fallback policy, if it exists.\n    const fallbackPolicy = TrustedTypes.defaultPolicy;\n    if (!fallbackPolicy) {\n      throw new Error('Default policy does not exist');\n    }\n    if (!TYPE_CHECKER_MAP.hasOwnProperty(typeName)) {\n      throw new Error();\n    }\n    return fallbackPolicy[TYPE_PRODUCER_MAP[typeName]](value, '' + sink);\n  }\n\n  /**\n   * Logs and enforces TrustedTypes depending on the given configuration.\n   * @template T\n   * @param {!Object} context The object that the setter is called for.\n   * @param {string} propertyName The name of the property.\n   * @param {!Function} typeToEnforce The type to enforce.\n   * @param {function(?):T} originalSetter Original setter.\n   * @param {number} argNumber Number of argument to enforce the type of.\n   * @param {Array} args Arguments.\n   * @return {T}\n   * @private\n   */\n  enforce_(context, propertyName, typeToEnforce, originalSetter, argNumber,\n      args) {\n    const value = args[argNumber];\n    const typeName = '' + typeToEnforce.name;\n    // If typed value is given, pass through.\n    if (TYPE_CHECKER_MAP.hasOwnProperty(typeName) &&\n        TYPE_CHECKER_MAP[typeName](value)) {\n      if (stringifyForRangeHack &&\n            propertyName == 'createContextualFragment') {\n        // IE 11 hack, somehow the value is not stringified implicitly.\n        args[argNumber] = args[argNumber].toString();\n      }\n      return apply(originalSetter, context, args);\n    }\n\n    if (typeToEnforce === TrustedTypes.TrustedScript) {\n      const isInlineEventHandler =\n          propertyName == 'setAttribute' ||\n          propertyName === 'setAttributeNS' ||\n          apply(slice, propertyName, [0, 2]) === 'on';\n      // If a function (instead of string) is passed to inline event attribute,\n      // or set(Timeout|Interval), pass through.\n      const propertyAcceptsFunctions =\n          propertyName === 'setInterval' ||\n          propertyName === 'setTimeout' ||\n          isInlineEventHandler;\n      if ((propertyAcceptsFunctions && typeof value === 'function') ||\n          (isInlineEventHandler && value === null)) {\n        return apply(originalSetter, context, args);\n      }\n    }\n\n    // Apply a fallback policy, if it exists.\n    let fallbackValue;\n    let exceptionThrown;\n    const objName = context instanceof Element ?\n        context.localName :\n        getConstructorName_(context ? context.constructor : window.constructor);\n    try {\n      fallbackValue = this.maybeCallDefaultPolicy_(\n          typeName, value, objName + '.' + propertyName);\n    } catch (e) {\n      exceptionThrown = true;\n    }\n    if (!exceptionThrown) {\n      args[argNumber] = fallbackValue;\n      return apply(originalSetter, context, args);\n    }\n\n    // This will throw a TypeError if enforcement is enabled.\n    this.processViolation_(context, propertyName, typeToEnforce, value);\n\n    return apply(originalSetter, context, args);\n  }\n\n  /**\n   * Report a TT violation.\n   * @param {!Object} context The object that the setter is called for.\n   * @param {string} propertyName The name of the property.\n   * @param {!Function} typeToEnforce The type to enforce.\n   * @param {string} value The value that was violated the restrictions.\n   * @throws {TypeError} if the enforcement is enabled.\n   */\n  processViolation_(context, propertyName, typeToEnforce, value) {\n    const contextName = getConstructorName_(context.constructor) ||\n        '' + context;\n    const message = `Failed to set ${propertyName} on ${contextName}: `\n        + `This property requires ${typeToEnforce.name}.`;\n\n    if (this.config_.isLoggingEnabled) {\n      // eslint-disable-next-line no-console\n      console.warn(message, propertyName, context, typeToEnforce, value);\n    }\n\n    // Unconditionally dispatch an event.\n    if (typeof SecurityPolicyViolationEvent == 'function') {\n      let blockedURI = '';\n      if (typeToEnforce === TrustedTypes.TrustedURL ||\n          typeToEnforce === TrustedTypes.TrustedScriptURL) {\n        blockedURI = parseUrl_(value) || '';\n        if (blockedURI) {\n          blockedURI = blockedURI.href;\n        }\n      }\n      const valueSlice = apply(slice, '' + value, [0, 40]);\n      const event = new SecurityPolicyViolationEvent(\n          'securitypolicyviolation',\n          {\n            'bubbles': true,\n            'blockedURI': blockedURI,\n            'disposition': this.config_.isEnforcementEnabled ?\n              'enforce' : 'report',\n            'documentURI': document.location.href,\n            'effectiveDirective': DIRECTIVE_NAME,\n            'originalPolicy': this.config_.cspString,\n            'statusCode': 0,\n            'violatedDirective': DIRECTIVE_NAME,\n            'sample': `${contextName}.${propertyName} ${valueSlice}`,\n          });\n      if (context instanceof Node && context.isConnected) {\n        context.dispatchEvent(event);\n      } else { // Fallback - dispatch an event on base document.\n        document.dispatchEvent(event);\n      }\n    }\n\n    if (this.config_.isEnforcementEnabled) {\n      throw new TypeError(message);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * @fileoverview Entry point for a polyfill that only defines the types\n * (i.e. no enforcement logic).\n */\nimport {trustedTypes, TrustedTypePolicy, TrustedTypePolicyFactory} from\n  '../trustedtypes.js';\n\nconst tt = trustedTypes;\n\n/**\n * Sets up the public Trusted Types API in the global object.\n */\nfunction setupPolyfill() {\n  // We use array accessors to make sure Closure compiler will not alter the\n  // names of the properties..\n\n  // we only setup the polyfill only in browser environment.\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const rootProperty = 'trustedTypes';\n\n  // Convert old window.TrustedTypes to window.trustedTypes.\n  if (window['TrustedTypes'] && typeof window[rootProperty] === 'undefined') {\n    window[rootProperty] = Object.freeze(window['TrustedTypes']);\n  }\n\n  if (typeof window[rootProperty] !== 'undefined') {\n    return;\n  }\n\n  const publicApi = Object.create(TrustedTypePolicyFactory.prototype);\n  Object.assign(publicApi, {\n    'isHTML': tt.isHTML,\n    'isURL': tt.isURL,\n    'isScriptURL': tt.isScriptURL,\n    'isScript': tt.isScript,\n    'createPolicy': tt.createPolicy,\n    'getPolicyNames': tt.getPolicyNames,\n    'getAttributeType': tt.getAttributeType,\n    'getPropertyType': tt.getPropertyType,\n    'getTypeMapping': tt.getTypeMapping,\n    'emptyHTML': tt.emptyHTML,\n    '_isPolyfill_': true,\n  });\n  Object.defineProperty(\n      publicApi,\n      'defaultPolicy',\n      Object.getOwnPropertyDescriptor(tt, 'defaultPolicy') || {});\n\n  window[rootProperty] = Object.freeze(publicApi);\n\n  window['TrustedHTML'] = tt.TrustedHTML;\n  window['TrustedURL'] = tt.TrustedURL;\n  window['TrustedScriptURL'] = tt.TrustedScriptURL;\n  window['TrustedScript'] = tt.TrustedScript;\n  window['TrustedTypePolicy'] = TrustedTypePolicy;\n  window['TrustedTypePolicyFactory'] = TrustedTypePolicyFactory;\n}\n\nsetupPolyfill();\n\nexport default tt;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * @fileoverview Entry point for a polyfill that enforces the types.\n */\nimport {TrustedTypesEnforcer} from '../enforcer.js';\nimport {TrustedTypeConfig} from '../data/trustedtypeconfig.js';\n// import and setup trusted types\nimport './api_only.js';\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Tries to guess a CSP policy from:\n *  - the current polyfill script element text content (if prefixed with\n *    \"Content-Security-Policy:\")\n *  - the data-csp attribute value of the current script element.\n *  - meta header\n * @return {?string} Guessed CSP value, or null.\n */\nfunction detectPolicy() {\n  try {\n    const currentScript = document.currentScript || (function() {\n      const scripts = document.getElementsByTagName('script');\n      return scripts[scripts.length - 1];\n    })();\n\n    const bodyPrefix = 'Content-Security-Policy:';\n    if (currentScript &&\n            currentScript.textContent.trim().substr(0, bodyPrefix.length) ==\n                bodyPrefix) {\n      return currentScript.textContent.trim().slice(bodyPrefix.length);\n    }\n    if (currentScript.dataset['csp']) {\n      return currentScript.dataset['csp'];\n    }\n    const cspInMeta = document.head.querySelector(\n        'meta[http-equiv^=\"Content-Security-Policy\"]');\n    if (cspInMeta) {\n      return cspInMeta['content'].trim();\n    }\n  } catch (e) {\n    return null;\n  }\n  return null;\n}\n\n/**\n * Bootstraps all trusted types polyfill and their enforcement.\n */\nexport function bootstrap() {\n  const csp = detectPolicy();\n  const config = csp ? TrustedTypeConfig.fromCSP(csp) : new TrustedTypeConfig(\n      /* isLoggingEnabled */ false,\n      /* isEnforcementEnabled */ false,\n      /* allowedPolicyNames */ ['*']);\n\n  const trustedTypesEnforcer = new TrustedTypesEnforcer(config);\n\n  trustedTypesEnforcer.install();\n}\n\n/**\n * Determines if the enforcement should be enabled.\n * @return {boolean}\n */\nfunction shouldBootstrap() {\n  for (const rootProperty of ['trustedTypes', 'TrustedTypes']) {\n    if (window[rootProperty] && !window[rootProperty]['_isPolyfill_']) {\n      // Native implementation exists\n      return false;\n    }\n  }\n  return true;\n}\n\n// Bootstrap only if native implementation is missing.\nif (shouldBootstrap()) {\n  bootstrap();\n}\n"]}